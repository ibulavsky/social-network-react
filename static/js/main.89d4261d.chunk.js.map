{"version":3,"sources":["components/Header/Header.module.css","api/api.js","components/Profile/Posts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileDescription/ProfileDesc.module.css","utils/object-helper-immutable-change.js","redux/users/users-reducer.js","assets/images/user.png","assets/images/preloader.svg","components/Profile/Profile.module.css","assets/images/right-tick.svg","assets/images/false-tick.svg","components/Footer/Footer.module.css","redux/users/users-thunks.js","components/common/Pagination/Pagination.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users/users-selectors.js","components/Users/UsersContainer.jsx","redux/dialogs/dialogs-reducer.js","redux/profile/profile-reducer.js","components/common/Preloader/Preloader.js","components/common/FormsControl/FormsControls.module.css","serviceWorker.js","redux/sidebar-following/sidebar-reducer.js","redux/main/app-reducer.js","redux/redux-store.js","components/Header/Header.jsx","components/Header/HeaderCountainer.jsx","components/Navbar/Navbar.jsx","components/Footer/Footer.jsx","components/Sidebar/Sidebar.jsx","components/Sidebar/SidebarContainer.jsx","components/common/ErrorModal/ModalSimpleMessage.jsx","components/common/ErrorModal/ModalsContainer.jsx","components/common/ErrorModal/ModalsPage.jsx","App.js","index.js","redux/errors-handler.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","utils/validators/validators.js","components/common/FormsControl/FormsControls.js","components/Dialogs/Message/SendForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx","components/Profile/ProfileInfo/ProfileDescription/ProfileDesc.jsx","components/Profile/ProfileInfo/Avatar/ProfilePhoto.jsx","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDescription/ProfileDescForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Posts/Post/Post.jsx","components/Profile/Posts/Posts.jsx","components/Profile/Posts/PostsContainer.jsx","components/Profile/Profile.jsx","redux/profile/profile-thunks.js","components/Profile/ProfileContainer.jsx","components/Login/Login.jsx","components/Main/Routes.jsx","hoc/withSuspense.js","api/dialogs-api.js","redux/dialogs/dialogs-thunks.js","components/Dialogs/Dialogs.module.css","redux/auth/auth-reducer.js","components/Users/Users.module.css","components/Navbar/Navbar.module.css","components/Dialogs/DialogItem/DialogItem.module.css","redux/auth/auth-thunks.js","components/common/UserAvatar/Avatar.jsx","api/auth-api.js","components/Dialogs/Message/SendForm.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/Avatar/ProfilePhoto.module.css","components/Profile/Posts/Posts.module.css","components/common/Pagination/Pagination.module.css"],"names":["module","exports","handler401","errorHandler","instance","axios","withCredentials","baseURL","headers","setHandler401","callback","setErrorHandler","interceptors","response","use","error","status","message","Promise","reject","usersAPI","getUsers","currentPage","pageSize","get","then","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","put","uploadPhoto","photoFile","formData","FormData","append","saveProfile","profile","updateObjectArray","items","itemId","objPropName","newObjProps","map","i","FOLLOW","UNFOLLOW","SET_USERS","SET_REDIRECT_TO_DIALOGS","SET_CURRENT_PAGE","SET_USERS_TOTAL_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","initialState","users","redirectToDialogId","totalUsersCount","isFetching","followingInProgress","followSuccess","usersReducer","state","action","type","followed","count","filter","id","unfollowSuccess","setUsers","setRedirectToDialog","setCurrentPage","setTotalUsersCount","totalCount","toggleIsFetching","toggleIsFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","async","resultCode","Pagination","totalItemsCount","onPageChanged","portionSize","useState","portionNumber","setPortionNumber","pagesCount","Math","ceil","pages","push","portionCount","leftPortionPageNumber","rightPortionPageNumber","className","s","paginator","onClick","p","key","cn","selectedPage","pageNumber","User","user","photoContainer","to","PROFILE_PATH","Avatar","photo","photos","small","styled","userPhoto","disabled","some","DIALOGS_PATH","userDesc","name","Users","props","usersContainer","u","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","getRedirectToDialogId","UsersContainer","this","Preloader","startDialog","React","Component","compose","connect","bind","requestPage","SEND_MESSAGE","SET_MESSAGES","IS_MESSAGES_LOADING","IS_DIALOGS_LOADING","SET_INTERLOCUTOR_ID","SET_DIALOGS","messagesData","dialogsData","currentInterlocutorId","isDialogsLoading","isLoading","dialogsReducer","dialogsList","body","newMessage","messagesList","sendMessageCreator","setMessages","setLoadingMessages","setCurrentInterlocutorId","isLoadingDialogs","setDialogs","ADD_POST","SET_USER_PROFILE","LOADING_PROFILE","SET_STATUS","DELETE_POST","UPLOAD_PHOTO_SUCCESS","UPLOAD_PHOTO_ERROR","LOADING_PHOTO","postsData","likesCount","aboutMe","contacts","facebook","lookingForAJob","lookingForAJobDescription","fullName","large","isPhotoLoading","errorPhotoLoadingMessage","errorMessage","profileReducer","newPost","newPostText","postId","addPostActionCreator","setUserProfile","isProfileLoading","setStatus","uploadPhotoSuccess","uploadPhotoError","alt","src","preloader","Boolean","window","location","hostname","match","friendsName","sidebarReducer","INITIALIZED_SUCCESS","SET_ERROR","initialized","appReducer","setError","reducers","combineReducers","profilePage","messagesPage","sidebar","auth","authReducer","app","form","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","Header","header","loginBlock","isAuth","login","logout","HeaderContainer","Navbar","nav","item","activeClassName","activeLink","USERS_PATH","Footer","footer","Sidebar","m","SidebarContainer","Modal","children","show","blackout","style","position","top","left","width","height","backgroundColor","opacity","display","alignItems","justifyContent","borderRadius","ModalContainer","useDispatch","flexDirection","margin","right","padding","ModalsPage","useSelector","ModalsContainer","App","lazy","catchAllUnhandledErrors","reason","promise","initializeApp","addEventListener","removeEventListener","Routes","AppContainer","withRouter","getAuthUserData","all","MainApp","ReactDOM","render","document","getElementById","setAuthUserData","navigator","serviceWorker","ready","registration","unregister","DialogItem","dialogWrapper","dialog","avatarWrapper","avatar","nameWrapper","isNewMessage","newMessagesCountWrapper","newMessagesCount","Message","unViewed","viewed","autorName","textMessage","deleteMessage","required","value","maxLengthCreator","maxLength","length","FormControl","meta","touched","hasError","styles","formControl","Textarea","input","restProps","child","Input","createField","placeholder","validators","component","text","marginBottom","Field","validate","marginLeft","maxLength100","AddMessageFormRedux","reduxForm","onSubmit","handleSubmit","formWrapper","textareaWrapper","textarea","buttonWrapper","button","Dialogs","dialogsPage","useParams","isMessagesWindow","activatingMessagesWindow","useEffect","getDialogs","refreshDialogs","getMessages","dialogsArr","messagesArr","isMessagesLoading","onDeleteMessage","dialogsElements","userName","hasNewMessages","messagesElements","companionId","recipientId","senderName","dialogs","messages","values","sendMessage","newMessageBody","dialogsItems","LOG_IN_PATH","mapStateToPropsForRedirect","withAuthRedirect","RedirectComponent","ProfileDesc","Contact","contactTitle","contactValue","objContacts","profileData","arrContacts","Object","keys","descriptionProfile","isOwner","btnEdit","changeData","rightTick","icon","falseTick","ProfilePhoto","addPhoto","inputElement","useRef","marginRight","navLink","onChange","e","target","files","onPhotoUpload","ref","current","click","ProfileStatusWithHooks","editMode","setEditMode","onDoubleClick","currentTarget","autoFocus","onBlur","ProfileDescFormReduxForm","descElementWrap","descElementTitle","editForm","editDescription","formSummaryError","btnSubmit","ProfileInfo","isEditMode","profileInfo","color","initialValues","Post","myPost","like","Posts","memo","MyPosts","obj","PostsFormRedux","addPost","posts","maxLength10","PostsContainer","Profile","content","getUserProfile","ProfileContainer","refreshProfile","params","authorizedUserId","history","myPhoto","prevProps","prevState","snapshot","getState","stopSubmit","_error","LoginReduxForm","captchaUrl","loginWrapper","checkboxWrapper","captcha","loginPage","loginHeader","email","password","rememberMe","START_GH_PAGES_PATH","exact","path","DialogsContainer","fallback","dialogsAPI","SET_USER_DATA","GET_CAPTCHA_URL_SUCCESS","payload","getCaptchaUrlSuccess","authAPI","me","getCaptchaUrl","securityAPI","captchUrl","url","styleForAvatar"],"mappings":"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","file":"static/js/main.89d4261d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3DP8N\",\"loginBlock\":\"Header_loginBlock__3qsUX\"};","import * as axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        //main\r\n        'API-KEY': '7dc52db3-0d14-44ab-80ee-40d908279e0f'\r\n\r\n        // emp\r\n        // 'API-KEY': '44e15dfc-6469-4cef-80d5-de74742b85b4'\r\n    },\r\n});\r\n\r\nlet handler401;\r\n\r\nexport const setHandler401 = (callback) => {\r\n    handler401 = callback;\r\n}\r\n\r\nlet errorHandler;\r\n\r\nexport const setErrorHandler = (callback) => {\r\n    errorHandler = callback;\r\n}\r\n\r\ninstance.interceptors.response.use(response => {\r\n        return response\r\n    },\r\n    error => {\r\n        if (error.response.status === 401) {\r\n            handler401()\r\n        } else {\r\n            errorHandler(error.message)\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n)\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`,\r\n        ).then(response => response.data)\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`, {})\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`,)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsoleted method');\r\n        return profileAPI.getProfile(userId)\r\n    }\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status/`, {status: status});\r\n    },\r\n    uploadPhoto(photoFile) {\r\n        let formData = new FormData();\r\n        formData.append('image', photoFile);\r\n        return instance.put(`profile/photo/`, formData, 'multipart/form-data')\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`profile/`, profile)\r\n    },\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPost\":\"Post_myPost__1xAV2\",\"like\":\"Post_like__drfKI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnEdit\":\"ProfileDesc_btnEdit__3DZPh\",\"name\":\"ProfileDesc_name__2EMZc\",\"icon\":\"ProfileDesc_icon__VrKIe\",\"contactTitle\":\"ProfileDesc_contactTitle__huWij\",\"editForm\":\"ProfileDesc_editForm__3O9Gu\",\"editDescription\":\"ProfileDesc_editDescription__16nqp\",\"descElementWrap\":\"ProfileDesc_descElementWrap__3nuta\",\"descElementTitle\":\"ProfileDesc_descElementTitle__3bNnQ\",\"btnSubmit\":\"ProfileDesc_btnSubmit__1Os0z\"};","export const updateObjectArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(i => {\r\n        if (i[objPropName] === itemId) {\r\n            return {...i, ...newObjProps}\r\n        }\r\n        return i;\r\n    })\r\n\r\n}\r\n","import {updateObjectArray} from \"../../utils/object-helper-immutable-change\"\r\n\r\nexport const FOLLOW = 'SOCIAL-NETWORK/USERS-REDUCER/FOLLOW';\r\nexport const UNFOLLOW = 'SOCIAL-NETWORK/USERS-REDUCER/UNFOLLOW';\r\nexport const SET_USERS = 'SOCIAL-NETWORK/USERS-REDUCER/SET_USERS';\r\nexport const SET_REDIRECT_TO_DIALOGS = 'SOCIAL-NETWORK/USERS-REDUCER/SET_REDIRECT_TO_DIALOGS';\r\nexport const SET_CURRENT_PAGE = 'SOCIAL-NETWORK/USERS-REDUCER/SET_CURRENT_PAGE';\r\nexport const SET_USERS_TOTAL_COUNT = 'SOCIAL-NETWORK/USERS-REDUCER/SET_USERS_TOTAL_COUNT';\r\nexport const TOGGLE_IS_FETCHING = 'SOCIAL-NETWORK/USERS-REDUCER/TOGGLE_IS_FETCHING';\r\nexport const TOGGLE_IS_FOLLOWING_PROGRESS = 'SOCIAL-NETWORK/USERS-REDUCER/TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\nconst initialState = {\r\n    users: [],\r\n    redirectToDialogId: null,\r\n    pageSize: 10,\r\n    totalUsersCount: 20,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectArray(state.users, action.userId, 'id', {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectArray(state.users, action.userId, 'id', {followed: false})\r\n            }\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: [...action.users]\r\n            }\r\n        }\r\n        case SET_REDIRECT_TO_DIALOGS: {\r\n            return {\r\n                ...state,\r\n                redirectToDialogId: action.userId\r\n            }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n        case SET_USERS_TOTAL_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.count\r\n            }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default usersReducer;\r\n\r\n// Action Creators:\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setRedirectToDialog = (userId) => ({type: SET_REDIRECT_TO_DIALOGS, userId});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalCount) => ({type: SET_USERS_TOTAL_COUNT, count: totalCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleIsFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n","module.exports = __webpack_public_path__ + \"static/media/user.b6a2af8d.png\";","module.exports = __webpack_public_path__ + \"static/media/preloader.dd257cf1.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__3klPd\"};","module.exports = __webpack_public_path__ + \"static/media/right-tick.9fcfd417.svg\";","module.exports = __webpack_public_path__ + \"static/media/false-tick.54d5c263.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__3YFvC\"};","// THUNK CREATORS:\r\nimport {\r\n    followSuccess,\r\n    setCurrentPage,\r\n    setTotalUsersCount,\r\n    setUsers,\r\n    toggleIsFetching,\r\n    toggleIsFollowingProgress, unfollowSuccess\r\n} from \"./users-reducer\"\r\nimport {usersAPI} from \"../../api/api\"\r\n\r\nexport const requestUsers = (requestPage, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(requestPage));\r\n    const data = await usersAPI.getUsers(requestPage, pageSize)\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalUsersCount(data.totalCount));\r\n}\r\n\r\n// common function for follow/unfollow event.\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleIsFollowingProgress(true, userId));\r\n    const response = await apiMethod(userId)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleIsFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n    await followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess)\r\n}\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n    await followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\r\n}\r\n","import React, {useState} from 'react'\r\nimport s from \"./Pagination.module.css\";\r\nimport cn from \"classnames\";\r\n\r\nlet Pagination = ({currentPage, totalItemsCount, pageSize, onPageChanged, portionSize = 10}) => {\r\n\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    return <div className={s.paginator}>\r\n        {portionNumber > 1 &&\r\n        <button onClick={() => setPortionNumber(portionNumber - 1)}>Prev</button>}\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n            .map(p => {\r\n                    return <span\r\n                        key={p}\r\n                        className={cn({[s.selectedPage]: currentPage === p}, s.pageNumber)}\r\n                        onClick={() => {\r\n                            onPageChanged(p)\r\n                        }}>\r\n                    {p}\r\n            </span>\r\n                }\r\n            )\r\n        }\r\n        {portionCount > portionNumber &&\r\n        <button onClick={() => {\r\n            setPortionNumber(portionNumber + 1)\r\n        }}>Next</button>\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default Pagination;\r\n","import React from 'react'\r\nimport s from \"./Users.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Avatar from \"../common/UserAvatar/Avatar.jsx\"\r\nimport {DIALOGS_PATH, PROFILE_PATH} from \"../Main/Routes\"\r\n\r\nconst User = ({user, followingInProgress, unfollow, follow}) => {\r\n\r\n    const followClick = () => {\r\n        follow(user.id)\r\n    }\r\n    const unFollowClick = () => unfollow(user.id)\r\n\r\n    return <>\r\n              <span className={s.user}>\r\n                  <div className={s.photoContainer}>\r\n                  <NavLink to={`${PROFILE_PATH}/${user.id}`}>\r\n                                <Avatar photo={user.photos.small} styled={s.userPhoto}/>\r\n                  </NavLink>\r\n                      {user.followed\r\n                          ? <button\r\n                              disabled={followingInProgress.some(id => id === user.id)}\r\n                              onClick={unFollowClick}>Unfollow</button>\r\n                          : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                    onClick={followClick}>Follow</button>}\r\n                      <NavLink to={`${DIALOGS_PATH}/${user.id}`}>\r\n                              <button>Dialog</button>\r\n                      </NavLink>\r\n                </div>\r\n                   <span className={s.userDesc}>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                   </span>\r\n            </span>\r\n    </>\r\n}\r\n\r\nexport default User;\r\n","import React from 'react'\r\nimport Pagination from \"../common/Pagination/Pagination\"\r\nimport User from \"./User\"\r\nimport s from \"./Users.module.css\"\r\n\r\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\r\n    return <div className={s.usersContainer}>\r\n        <Pagination currentPage={currentPage}\r\n                    totalItemsCount={totalUsersCount}\r\n                    pageSize={pageSize}\r\n                    onPageChanged={onPageChanged}\r\n                    portionSize={20}\r\n        />\r\n        <div className={s.users}>\r\n            {users.map(u => <User\r\n                    user={u}\r\n                    key={u.id}\r\n                    follow={props.follow}\r\n                    unfollow={props.unfollow}\r\n                    followingInProgress={props.followingInProgress}\r\n                />\r\n            )\r\n            }\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default Users;\r\n","// import {createSelector} from \"reselect\";\r\n\r\nexport const getUsers = (state) => {\r\n    return state.usersPage.users\r\n};\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n};\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n};\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n};\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n};\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n};\r\nexport const getRedirectToDialogId = (state) => {\r\n    return state.usersPage.redirectToDialogId;\r\n};\r\n\r\n\r\n// reselector Example\r\n// export const getUsersSuperSelector = createSelector(getUsers, getIsFetching, (users, isFetching) => {\r\n//         if (!isFetching) {\r\n//             return users.filter(u => true)\r\n//         }\r\n//     }\r\n// );\r\n","import React from 'react';\r\nimport {\r\n    follow, unfollow, requestUsers\r\n} from \"../../redux/users/users-thunks\";\r\nimport {connect} from \"react-redux\";\r\nimport Users from './Users';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage, getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize, getRedirectToDialogId,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../redux/users/users-selectors\";\r\nimport {setCurrentPage, toggleIsFollowingProgress} from \"../../redux/users/users-reducer\"\r\nimport {startDialog} from \"../../redux/dialogs/dialogs-thunks\"\r\nimport {Redirect} from \"react-router-dom\"\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props\r\n        this.props.getUsers(pageNumber, pageSize);\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        if (this.props.userId) {\r\n            return <Redirect to={`/dialogs/${this.props.userId}`}/>\r\n        }\r\n\r\n        return <>\r\n            {this.props.isFetching\r\n                ? <Preloader/>\r\n                : null}\r\n            <Users onPageChanged={this.onPageChanged}\r\n                   totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n                   startDialog={this.props.startDialog}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n        userId: getRedirectToDialogId(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        follow, unfollow, setCurrentPage, toggleIsFollowingProgress, startDialog, getUsers: requestUsers\r\n    }))(UsersContainer)\r\n","export const SEND_MESSAGE = 'SOCIAL-NETWORK/DIALOGS-REDUCER/SEND-MESSAGE';\r\nexport const SET_MESSAGES = 'SOCIAL-NETWORK/DIALOGS-REDUCER/SET-MESSAGES';\r\nexport const IS_MESSAGES_LOADING = 'SOCIAL-NETWORK/DIALOGS-REDUCER/IS_MESSAGES_LOADING';\r\nexport const IS_DIALOGS_LOADING = 'SOCIAL-NETWORK/DIALOGS-REDUCER/IS_DIALOGS_LOADING';\r\nexport const SET_INTERLOCUTOR_ID = 'SOCIAL-NETWORK/DIALOGS-REDUCER/SET_INTERLOCUTOR_ID';\r\nexport const SET_DIALOGS = 'SOCIAL-NETWORK/DIALOGS-REDUCER/SET_DIALOGS';\r\nexport const START_DIALOG = 'SOCIAL-NETWORK/DIALOGS-REDUCER/START_DIALOG';\r\n\r\n\r\nconst initialState = {\r\n    messagesData: [\r\n        //отправка\r\n        // {\r\n        //     \"data\": {\r\n        //         \"message\": {\r\n        //             \"id\": \"c7e99ff5-f656-4457-a8ee-53f90ede7320\",\r\n        //             \"body\": \"Hello\",\r\n        //             \"translatedBody\": null,\r\n        //             \"addedAt\": \"2019-12-08T11:33:47.977\",\r\n        //             \"senderId\": 1567,\r\n        //             \"senderName\": \"ibulavsky\",\r\n        //             \"recipientId\": 1570,\r\n        //             \"recipientName\": \"Gaypt1994\",\r\n        //             \"viewed\": false,\r\n        //             \"deletedBySender\": false,\r\n        //             \"deletedByRecipient\": false,\r\n        //             \"isSpam\": false,\r\n        //             \"distributionId\": null\r\n        //         }\r\n        //     }, \"messages\": [], \"resultCode\": 0\r\n        // },\r\n        // {\r\n        //     \"id\": \"c7e99ff5-f656-4457-a8ee-53f90ede7320\",\r\n        //     \"body\": \"Hello\",\r\n        //     \"translatedBody\": null,\r\n        //     \"addedAt\": \"2019-12-08T11:33:47.977\",\r\n        //     \"senderId\": 1567,\r\n        //     \"senderName\": \"ibulavsky\",\r\n        //     \"recipientId\": 1570,\r\n        //     \"viewed\": false\r\n        // },\r\n    ],\r\n\r\n    dialogsData: [\r\n        // {\r\n        //     \"id\": 1570,\r\n        //     \"userName\": \"Gaypt1994\",\r\n        //     \"hasNewMessages\": true,\r\n        //     \"lastDialogActivityDate\": \"2019-12-08T08:58:57.967\",\r\n        //     \"lastUserActivityDate\": \"2019-12-07T19:12:19.397\",\r\n        //     \"newMessagesCount\": 5,\r\n        //     \"photos\": {\r\n        //         \"small\": \"https://social-network.samuraijs.com/activecontent/images/users/1570/user-small.jpg?v=1\",\r\n        //         \"large\": \"https://social-network.samuraijs.com/activecontent/images/users/1570/user.jpg?v=1\"\r\n        //     }\r\n        // },\r\n        // {\r\n        //     \"id\": 1570,\r\n        //     \"userName\": \"Gaypt1994\",\r\n        //     \"hasNewMessages\": true,\r\n        //     \"lastDialogActivityDate\": \"2019-12-08T08:58:57.967\",\r\n        //     \"lastUserActivityDate\": \"2019-12-07T19:12:19.397\",\r\n        //     \"newMessagesCount\": 5,\r\n        //     \"photos\": {\r\n        //         \"small\": \"https://social-network.samuraijs.com/activecontent/images/users/1570/user-small.jpg?v=1\",\r\n        //         \"large\": \"https://social-network.samuraijs.com/activecontent/images/users/1570/user.jpg?v=1\"\r\n        //     }\r\n        // },\r\n    ],\r\n    currentInterlocutorId: '',\r\n    isDialogsLoading: false,\r\n    isLoading: false,\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case IS_DIALOGS_LOADING:\r\n            return {\r\n                ...state,\r\n                isDialogsLoading: action.isLoading\r\n            };\r\n        case SET_DIALOGS:\r\n            return {\r\n                ...state,\r\n                dialogsData: action.dialogsList,\r\n            };\r\n        case SET_INTERLOCUTOR_ID:\r\n            return {\r\n                ...state,\r\n                currentInterlocutorId: action.currentInterlocutorId,\r\n            };\r\n        case IS_MESSAGES_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: action.isLoading\r\n            };\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessage;\r\n            return {\r\n                ...state,\r\n                messagesData: [...state.messagesData, {id: 6, message: body}],\r\n            };\r\n        case SET_MESSAGES:\r\n            return {\r\n                ...state,\r\n                messagesData: action.messagesList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default dialogsReducer;\r\n\r\nexport const sendMessageCreator = (newMessage) => ({type: SEND_MESSAGE, newMessage});\r\nexport const setMessages = (messagesList) => ({type: SET_MESSAGES, messagesList});\r\nexport const setLoadingMessages = (isLoading) => ({type: IS_MESSAGES_LOADING, isLoading});\r\nexport const setCurrentInterlocutorId = (currentInterlocutorId) => ({type: SET_INTERLOCUTOR_ID, currentInterlocutorId});\r\nexport const isLoadingDialogs = (isLoading) => ({type: IS_DIALOGS_LOADING, isLoading});\r\nexport const setDialogs = (dialogsList) => ({type: SET_DIALOGS, dialogsList});\r\n","\r\nexport const ADD_POST = \"SOCIAL-NETWORK/PROFILE-REDUCER/ADD-POST\";\r\nexport const SET_USER_PROFILE = 'SOCIAL-NETWORK/PROFILE-REDUCER/SET_USER_PROFILE';\r\nexport const LOADING_PROFILE = 'SOCIAL-NETWORK/PROFILE-REDUCER/LOADING_PROFILE';\r\nexport const SET_STATUS = 'SOCIAL-NETWORK/PROFILE-REDUCER/SET_STATUS';\r\nexport const DELETE_POST = 'SOCIAL-NETWORK/PROFILE-REDUCER/DELETE_POST';\r\nexport const UPLOAD_PHOTO_SUCCESS = 'SOCIAL-NETWORK/PROFILE-REDUCER/UPLOAD_PHOTO_SUCCESS';\r\nexport const UPLOAD_PHOTO_ERROR = 'SOCIAL-NETWORK/PROFILE-REDUCER/UPLOAD_PHOTO_ERROR';\r\nexport const LOADING_PHOTO = 'SOCIAL-NETWORK/PROFILE-REDUCER/LOADING_PHOTO';\r\n\r\nconst initialState = {\r\n        postsData: [\r\n            // {id: 1, message: 'My Post', likesCount: 1},\r\n            // {id: 2, message: 'My Post 2', likesCount: 3},\r\n            {id: 3, message: \"Hello World! What's up?\", likesCount: 25},\r\n        ],\r\n        profile:\r\n            {\r\n                aboutMe: '',\r\n                contacts: {facebook: ''},\r\n                lookingForAJob: true,\r\n                lookingForAJobDescription: '',\r\n                fullName: '',\r\n                userId: null, //number\r\n                photos: {small: '', large: ''},\r\n                isPhotoLoading: false,\r\n                errorPhotoLoadingMessage: '',\r\n            },\r\n        status: '',\r\n        isLoading: false,\r\n        errorMessage: '',\r\n    }\r\n;\r\n\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 6,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData, newPost],\r\n                newPostText: ''\r\n            }\r\n        }\r\n        case  SET_USER_PROFILE: {\r\n            return {\r\n                ...state, profile: {...state.profile, ...action.profile}\r\n            };\r\n        }\r\n        case  LOADING_PROFILE: {\r\n            return {\r\n                ...state, isLoading: action.isLoading\r\n            };\r\n        }\r\n        case  DELETE_POST: {\r\n            return {\r\n                ...state, postsData: state.postsData.filter(p => p.id !== action.postId)\r\n            }\r\n        }\r\n        case\r\n        SET_STATUS: {\r\n            return {\r\n                ...state, status: action.status\r\n            };\r\n        }\r\n        case\r\n        UPLOAD_PHOTO_SUCCESS: {\r\n            return {\r\n                ...state, profile: {...state.profile, photos: action.photos}\r\n            };\r\n        }\r\n        case\r\n        UPLOAD_PHOTO_ERROR: {\r\n            return {\r\n                ...state, profile: {...state.profile, errorPhotoLoadingMessage: action.message}\r\n            };\r\n        }\r\n        case\r\n        LOADING_PHOTO: {\r\n            return {\r\n                ...state, profile: {...state.profile, isPhotoLoading: action.isLoading}\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default profileReducer;\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText});\r\n\r\n\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const isProfileLoading = (isLoading) => ({type: LOADING_PROFILE, isLoading});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\nexport const uploadPhotoSuccess = (photos) => ({type: UPLOAD_PHOTO_SUCCESS, photos});\r\nexport const uploadPhotoError = (message) => ({type: UPLOAD_PHOTO_ERROR, message});\r\nexport const isPhotoLoading = (isLoading) => ({type: LOADING_PHOTO, isLoading});\r\n\r\n","import preloader from \"../../../assets/images/preloader.svg\";\r\nimport React from \"react\";\r\n\r\nlet Preloader = () => {\r\n    return <div>\r\n    <img alt={'Preloader'} src={preloader}/>\r\n    </div>\r\n};\r\n\r\nexport default Preloader;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginPage\":\"FormsControls_loginPage__cr2k1\",\"loginHeader\":\"FormsControls_loginHeader__1NDcj\",\"loginWrapper\":\"FormsControls_loginWrapper__3kLVI\",\"checkboxWrapper\":\"FormsControls_checkboxWrapper__11-k0\",\"formControl\":\"FormsControls_formControl__nZE5u\",\"error\":\"FormsControls_error__1uHuk\",\"formSummaryError\":\"FormsControls_formSummaryError__1f1nd\",\"captcha\":\"FormsControls_captcha__wkOfi\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\r\n    friendsName: [\r\n        {name: \"Victor\", id: 1},\r\n        {name: \"Vadim\", id: 2},\r\n        {name: \"Max\", id: 3}\r\n    ]\r\n}\r\n\r\nconst sidebarReducer= (state = initialState, action) => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {getAuthUserData} from \"../auth/auth-thunks\";\r\n\r\nexport const INITIALIZED_SUCCESS = 'SOCIAL-NETWORK/APP-REDUCER/INITIALIZED_SUCCESS';\r\nexport const SET_ERROR = 'SOCIAL-NETWORK/APP-REDUCER/SET_ERROR';\r\n\r\nconst initialState = {\r\n    initialized: false,\r\n    errorMessage: '',\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            };\r\n        case SET_ERROR:\r\n            return {\r\n                ...state,\r\n                errorMessage: action.errorMessage,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default appReducer;\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\nexport const setError = (errorMessage) => ({type: SET_ERROR, errorMessage});\r\n\r\n\r\n// THUNK CREATOR:\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise]).then(() => {\r\n        dispatch(initializedSuccess());\r\n    })\r\n};\r\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile/profile-reducer\";\r\nimport dialogsReducer from \"./dialogs/dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-following/sidebar-reducer\";\r\nimport usersReducer from \"./users/users-reducer\";\r\nimport authReducer from \"./auth/auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport appReducer from \"./main/app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer,\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)))\r\nexport default store;\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <div className={s.loginBlock}>\r\n                {\r\n                    props.isAuth\r\n                        ? <> <span> {props.login} - </span>\r\n                            <button onClick={props.logout}> Log Out </button>\r\n                        </>\r\n                        : <NavLink to='/login'>Login</NavLink>\r\n                }\r\n            </div>\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default Header;\r\n","import React, {Component} from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth/auth-thunks\";\r\n\r\nclass HeaderContainer extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);\r\n","import React from 'react';\r\nimport s from './Navbar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {DIALOGS_PATH, PROFILE_PATH, USERS_PATH} from \"../Main/Routes\"\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to={PROFILE_PATH} activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={DIALOGS_PATH} activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={USERS_PATH} activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport s from './Footer.module.css'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className={s.footer}>\r\n            {/*<img src='https://fuzati.com/wp-content/uploads/2016/12/JS-Logo.png' alt={'Social Network Logo'}/>*/}\r\n        </footer>\r\n    )\r\n}\r\nexport default Footer;\r\n","import React from 'react';\r\nimport '../../App.css';\r\n\r\nconst Sidebar = (props) => {\r\n    return (\r\n        <div className=\"sidebar\">\r\n            Friends:\r\n            {props.friendsName.map((m) => <div key={m.id}> {m.name} </div>)}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Sidebar;\r\n","// import React from 'react';\r\nimport {connect} from 'react-redux'\r\n// import s from './Profile.module.css';\r\nimport Sidebar from \"./Sidebar\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        friendsName: state.sidebar.friendsName\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nconst SidebarContainer = connect (mapStateToProps, mapDispatchToProps)(Sidebar);\r\n\r\n\r\nexport default SidebarContainer;\r\n","import React from 'react';\r\n\r\nconst Modal = ({children, ...props}) => {\r\n\r\n    if (!props.show) return null;\r\n\r\n    return (\r\n        <>\r\n            {props.blackout && <div style={{\r\n                position: \"fixed\",\r\n                top: '0px',\r\n                left: '0px',\r\n                width: '100vw',\r\n                height: '100vh',\r\n                backgroundColor: \"red\",\r\n                opacity: \"0.3\"\r\n            }}> </div>}\r\n            <div style={{\r\n                position: \"fixed\",\r\n                display: 'flex',\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                width: '200px',\r\n                height: '100px',\r\n                borderRadius: '10px',\r\n                backgroundColor: \"white\",\r\n                top: `${props.top}px`\r\n            }}>\r\n                {children}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport Modals from \"./ModalSimpleMessage\";\r\nimport {useDispatch} from \"react-redux\"\r\nimport {setError} from \"../../../redux/main/app-reducer\"\r\n\r\nconst ModalContainer = ({errorMessage}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onSetError = () => {\r\n        dispatch(setError(''))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modals top={200} show={errorMessage} blackout={true}>\r\n                <div style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\"\r\n                }}>\r\n                    <div style={{margin: '10px'}}>\r\n                        {errorMessage}\r\n                    </div>\r\n                    <div style={{position: 'absolute', right: '10px', top: '10px'}}>\r\n                        <button style={{height: '22px', padding: '2px'}} onClick={() => onSetError()}>X</button>\r\n                    </div>\r\n                </div>\r\n            </Modals>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ModalContainer;\r\n","import React from 'react';\r\nimport ModalsContainer from \"./ModalsContainer\";\r\nimport {useSelector} from \"react-redux\"\r\n\r\nconst ModalsPage = () => {\r\n\r\n    const errorMessage = useSelector((state) => state.app.errorMessage)\r\n\r\n    return (\r\n        <>\r\n            <ModalsContainer errorMessage={errorMessage}/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ModalsPage;\r\n","import React, {Component, Suspense} from 'react';\nimport './App.css';\nimport Header from \"./components/Header/HeaderCountainer\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Footer from \"./components/Footer/Footer\";\nimport {BrowserRouter, Redirect, Route, Switch, withRouter} from \"react-router-dom\";\nimport SidebarContainer from \"./components/Sidebar/SidebarContainer\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/main/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport store from \"./redux/redux-store\"\nimport ModalsPage from \"./components/common/ErrorModal/ModalsPage\"\nimport Routes from \"./components/Main/Routes\"\n\nconst News = React.lazy(() => import('./components/News/News'))\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'))\n\nclass App extends Component {\n\n    catchAllUnhandledErrors = (reason, promise) => {\n        // alert('Some error')\n        console.error(promise)\n    }\n\n    componentDidMount() {\n        this.props.initializeApp();\n        window.addEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\n    }\n\n    render() {\n\n        if (!this.props.initialized) {\n            return <Preloader/>\n        } else {\n            return (\n                <div className='app-wrapper'>\n                    <Header/>\n                    <ModalsPage/>\n                    <div className='app-wrapper-content'>\n                        <div className='app-navbar'>\n                            < Navbar/>\n                            < SidebarContainer/>\n                        </div>\n                        <Routes/>\n                    </div>\n                    <Footer/>\n                </div>\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n});\n\nconst AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n\nconst MainApp = (props) => {\n    return (\n        <>\n            <BrowserRouter>\n                <Provider store={store}>\n                    <AppContainer/>\n                </Provider>\n            </BrowserRouter>\n        </>\n    )\n}\n\nexport default MainApp\n","import * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport './index.css';\nimport ReactDOM from \"react-dom\";\nimport {isError, isError401} from \"./redux/errors-handler\";\nimport MainApp from \"./App\"\n\nReactDOM.render(\n    <MainApp/>, document.getElementById('root'));\n\nisError401();\nisError();\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import store from \"./redux-store\"\r\nimport {setAuthUserData} from \"./auth/auth-reducer\"\r\nimport {setErrorHandler, setHandler401} from \"../api/api\"\r\nimport {setError} from \"./main/app-reducer\"\r\n\r\nexport const isError401 = () => {\r\n    const callback401 = () => {\r\n        return store.dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n    setHandler401(callback401)\r\n}\r\n\r\nexport const isError = () => {\r\n    const errorCallback = (errorMessage) => {\r\n        return store.dispatch(setError(errorMessage))\r\n    }\r\n    setErrorHandler(errorCallback)\r\n}\r\n","import React from 'react';\r\nimport s from './DialogItem.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport PropTypes from 'prop-types';\r\nimport Avatar from \"../../common/UserAvatar/Avatar\"\r\nimport {DIALOGS_PATH} from \"../../Main/Routes\"\r\n\r\nconst DialogItem = (props) => {\r\n\r\n    return (\r\n        <div className={s.dialogWrapper}>\r\n            <NavLink to={`${DIALOGS_PATH}/${props.id}`} className={s.dialog}>\r\n                <div className={s.avatarWrapper}>\r\n                    <Avatar photo={props.photo} styled={s.avatar}/>\r\n                </div>\r\n                <div className={s.nameWrapper}>\r\n                    {props.name}\r\n                </div>\r\n                {props.isNewMessage\r\n                    ? <div className={s.newMessagesCountWrapper}>\r\n                        <span className={s.newMessagesCount}>\r\n                            {props.newMessagesCount}\r\n                        </span>\r\n                    </div>\r\n                    : null}\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nDialogItem.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    name: PropTypes.string.isRequired\r\n}\r\n\r\nexport default DialogItem;\r\n","import React from 'react';\r\nimport cn from 'classnames';\r\nimport s from './../Dialogs.module.css';\r\n\r\nfunction Message(props) {\r\n    return <>\r\n\r\n        <div className={cn(s.message, {[`${s.unViewed}`]: !props.viewed})}>\r\n            <div>\r\n                <span className={s.autorName}>\r\n                    {props.name}:\r\n                </span>\r\n                <span className={s.textMessage}>\r\n                    {props.message}\r\n            </span>\r\n                <button onClick={() => props.deleteMessage(props.id)}>\r\n                    Delete\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default Message;\r\n","export const required = value => {\r\n    if (value) return undefined;\r\n    return 'Field is required!';\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value) {\r\n        if (value.length > maxLength) return `Max length is ${maxLength} symbols!`;\r\n    }\r\n    return undefined;\r\n};\r\n\r\n","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\"\r\nimport {Field} from \"redux-form\"\r\n\r\nconst FormControl = ({meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {/*<br/>*/}\r\n            <div>\r\n                {hasError && <span>{error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}> <textarea {...input} {...restProps} /></FormControl>\r\n};\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}> <input {...input} {...restProps} /></FormControl>\r\n};\r\n\r\nexport const createField = (placeholder, name, validators, component, props, text) => (\r\n    <div style={{display: 'flex', width: '150px', marginBottom: '5px', alignItems: 'center'}}>\r\n        <Field\r\n            placeholder={placeholder}\r\n            name={name}\r\n            validate={validators}\r\n            component={component}\r\n            {...props}/>\r\n        <span style={{width: '200px', marginLeft: '-70px'}}>\r\n            {text}\r\n        </span>\r\n    </div>\r\n)\r\n","import React from 'react'\r\nimport {maxLengthCreator} from \"../../../utils/validators/validators\"\r\nimport {Field, reduxForm} from \"redux-form\"\r\nimport {Textarea} from \"../../common/FormsControl/FormsControls\"\r\nimport s from './SendForm.module.css'\r\n\r\nconst maxLength100 = maxLengthCreator(100)\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (<form onSubmit={props.handleSubmit}>\r\n            <div className={s.formWrapper}>\r\n                <div className={s.textareaWrapper}>\r\n                    <Field className={s.textarea}\r\n                           component={Textarea}\r\n                           validate={maxLength100}\r\n                           name='newMessageBody'\r\n                           placeholder='Enter your message'\r\n                    />\r\n                </div>\r\n                <div className={s.buttonWrapper}>\r\n                    <button className={s.button}>Send</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm);\r\n","import React, {useState, useEffect} from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect, useParams, NavLink} from \"react-router-dom\";\r\nimport {AddMessageFormRedux} from \"./Message/SendForm\"\r\nimport Preloader from \"../common/Preloader/Preloader\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {deleteMessage, getDialogs, sendMessage} from \"../../redux/dialogs/dialogs-thunks\"\r\nimport {DIALOGS_PATH, LOG_IN_PATH} from \"../Main/Routes\"\r\n\r\nconst Dialogs = ({dialogsPage, ...props}) => {\r\n\r\n    const {userId} = useParams()\r\n\r\n    const [isMessagesWindow, activatingMessagesWindow] = useState(false)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getDialogs())\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        refreshDialogs()\r\n    }, [userId])\r\n\r\n    const refreshDialogs = () => {\r\n        if (userId) {\r\n            props.getMessages(userId);\r\n            activatingMessagesWindow(true)\r\n        } else {\r\n            activatingMessagesWindow(false)\r\n            dispatch(getDialogs())\r\n        }\r\n    }\r\n\r\n    //data\r\n    const dialogsArr = useSelector((state) => state.messagesPage.dialogsData)\r\n    const messagesArr = useSelector((state) => state.messagesPage.messagesData)\r\n    const currentInterlocutorId = useSelector((state) => state.messagesPage.currentInterlocutorId)\r\n    const isDialogsLoading = useSelector((state) => state.messagesPage.isDialogsLoading)\r\n    const isMessagesLoading = useSelector((state) => state.messagesPage.isLoading)\r\n\r\n    //methods\r\n    const addNewMessage = (values) => {\r\n        dispatch(sendMessage(currentInterlocutorId, values.newMessageBody))\r\n    }\r\n\r\n    const onDeleteMessage = (id) => {\r\n        dispatch(deleteMessage(id, currentInterlocutorId))\r\n    }\r\n\r\n    let dialogsElements = dialogsArr.map((dialog) => <DialogItem\r\n            activatingMessagesWindow={activatingMessagesWindow}\r\n            name={dialog.userName}\r\n            id={dialog.id}\r\n            key={dialog.id}\r\n            photo={dialog.photos.small}\r\n            newMessagesCount={dialog.newMessagesCount}\r\n            isNewMessage={dialog.hasNewMessages}\r\n        />\r\n    )\r\n\r\n    let messagesElements = messagesArr.map((m) => <Message\r\n            getMessages={props.getMessages}\r\n            deleteMessage={onDeleteMessage}\r\n            activatingMessagesWindow={activatingMessagesWindow}\r\n            message={m.body}\r\n            key={m.id}\r\n            id={m.id}\r\n            companionId={m.recipientId}\r\n            name={m.senderName}\r\n            viewed={m.viewed}\r\n        />\r\n    )\r\n\r\n    if (!props.isAuth) return <Redirect to={LOG_IN_PATH}/>;\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            {isMessagesWindow\r\n                ? <>\r\n                    {isMessagesLoading\r\n                        ? <Preloader/>\r\n                        : <div className={s.messages}>\r\n                            <NavLink to={DIALOGS_PATH}>\r\n                                <button>back</button>\r\n                            </NavLink>\r\n                            <div>{messagesElements}</div>\r\n                            <div>\r\n                                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </>\r\n                : <> {isDialogsLoading\r\n                    ? <Preloader/>\r\n                    : <div className={s.dialogsItems}>\r\n                        <div>{dialogsElements}</div>\r\n                    </div>\r\n                }\r\n                </>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;\r\n","import React from 'react'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to=\"/login\"/>;\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n","// import React from 'react';\r\nimport {sendMessageCreator} from \"../../redux/dialogs/dialogs-reducer\";\r\nimport {getMessages} from \"../../redux/dialogs/dialogs-thunks\"\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {withRouter} from \"react-router-dom\"\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {sendMessage: sendMessageCreator, getMessages}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(Dialogs);\r\n","import React from 'react';\r\nimport s from \"./ProfileDesc.module.css\";\r\nimport rightTick from '../../../../assets/images/right-tick.svg'\r\nimport falseTick from '../../../../assets/images/false-tick.svg'\r\n// import PropTypes from 'prop-types';\r\n\r\nconst ProfileDesc = (props) => {\r\n\r\n        const Contact = ({contactTitle, contactValue}) => <div className={s.contactTitle}>\r\n            <b>{contactTitle}:</b> {contactValue}</div>\r\n\r\n        let objContacts = props.profileData.contacts;\r\n        let arrContacts = Object.keys(objContacts)\r\n            .filter(key => objContacts[key])\r\n            .map(key => <Contact key={key} contactTitle={key} contactValue={objContacts[key]}/>)\r\n\r\n        return (\r\n            <div className={s.descriptionProfile}>\r\n                {props.isOwner &&\r\n                <div className={s.btnEdit}>\r\n                    <button onClick={() => props.changeData(true)}>edit info</button>\r\n                </div>\r\n                }\r\n                <span className={s.name}>\r\n                        {props.profileData.fullName}\r\n                </span>\r\n                <div>\r\n                    <b>About:</b>\r\n                    {props.profileData.aboutMe}\r\n                </div>\r\n                <div>\r\n                    <b>Looking For A JOB:</b>\r\n                    {props.profileData.lookingForAJob\r\n                        ? <img src={rightTick} alt={'right tick'} className={s.icon}/>\r\n                        : <img src={falseTick} alt={'false tick'} className={s.icon}/>\r\n                    }\r\n                </div>\r\n                {props.profileData.lookingForAJobDescription &&\r\n                <div>\r\n                    <b>My Skills:</b> {props.profileData.lookingForAJobDescription}\r\n                </div>}\r\n                {(arrContacts.length !== 0) ?\r\n                    <><b>Contacts:</b>\r\n                        {arrContacts}\r\n                    </> : null\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n;\r\n\r\n// AboutYou.propTypes = {\r\n//     profileData: PropTypes.objectOf(PropTypes.shape({\r\n//             name: PropTypes.string.isRequired,\r\n//             age: PropTypes.number.isRequired,\r\n//             filmsList: PropTypes.string.isRequired,\r\n//             musicList: PropTypes.string.isRequired\r\n//         }\r\n//         ).isRequired\r\n//     ).isRequired\r\n// };\r\n\r\nexport default ProfileDesc;\r\n","import React, {useRef} from 'react';\r\nimport s from \"./ProfilePhoto.module.css\";\r\nimport Avatar from \"../../../common/UserAvatar/Avatar\"\r\nimport Preloader from \"../../../common/Preloader/Preloader\"\r\nimport {useSelector} from \"react-redux\"\r\nimport {NavLink, useParams} from \"react-router-dom\"\r\nimport {DIALOGS_PATH} from \"../../../Main/Routes\"\r\n\r\nconst ProfilePhoto = ({addPhoto, isOwner}) => {\r\n\r\n    const {isPhotoLoading, photos, errorPhotoLoadingMessage} = useSelector((state) => state.profilePage.profile)\r\n\r\n    const {userId} = useParams()\r\n\r\n    const inputElement = useRef(null);\r\n\r\n    const changePhoto = () => {\r\n        inputElement.current && inputElement.current.click();\r\n    }\r\n\r\n    const onPhotoUpload = (e) => {\r\n        addPhoto(e.target.files[0])\r\n    }\r\n    return (\r\n        <div style={{marginRight: '10px'}}>\r\n            {isPhotoLoading\r\n                ? <div style={{\r\n                    width: '150px',\r\n                    height: '150px',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center'\r\n                }}>\r\n                    <Preloader/>\r\n                </div>\r\n                : <Avatar photo={photos.large} styled={s.photo}/>}\r\n            <div className={s.navLink}>\r\n                {isOwner\r\n                    ? <>\r\n                        <input type='file' style={{display: 'none'}}\r\n                               onChange={(e) => onPhotoUpload(e)}\r\n                               ref={inputElement}\r\n                        />\r\n                        <button style={{height: '30px'}} onClick={changePhoto}>Change Photo</button>\r\n                    </>\r\n                    : <>\r\n                        <NavLink to={`${DIALOGS_PATH}/${userId}`}>\r\n                            <button style={{height: '30px'}}>Send Message</button>\r\n                        </NavLink>\r\n                    </>\r\n                }\r\n            </div>\r\n            <span className={s.errorMessage}> {errorPhotoLoadingMessage || null} </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfilePhoto;\r\n","import React, {useState, useEffect} from 'react';\r\nimport s from '../ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    const [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => setEditMode(true)\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    let onStatusChange = (e) => setStatus(e.currentTarget.value);\r\n\r\n    return (\r\n        <div className={s.status}>\r\n            {!editMode &&\r\n            <div>\r\n                           <span onDoubleClick={activateEditMode}>\r\n                               {props.status || \"no-status\"}\r\n                           </span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input\r\n                    onChange={onStatusChange}\r\n                    autoFocus={true}\r\n                    onBlur={deactivateEditMode}\r\n                    value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;\r\n\r\n","import React from 'react';\r\nimport s from \"./ProfileDesc.module.css\";\r\nimport {createField, Input, Textarea} from \"../../../common/FormsControl/FormsControls\"\r\nimport {reduxForm} from \"redux-form\"\r\nimport styles from \"../../../common/FormsControl/FormsControls.module.css\"\r\nimport {useSelector} from \"react-redux\"\r\n\r\nconst ProfileDescForm = ({handleSubmit, error}) => {\r\n\r\n    const profile = useSelector((state) => state.profilePage.profile)\r\n\r\n    const objContacts = profile.contacts;\r\n    const arrContacts = Object.keys(objContacts)\r\n        .map(key => <div key={key} className={s.descElementWrap}>\r\n            <b className={s.descElementTitle}>{key}:</b> {createField(key, \"contacts.\" + key, [], Input)}\r\n        </div>)\r\n\r\n    return (\r\n        <form className={s.editForm} onSubmit={handleSubmit}>\r\n            <div className={s.editDescription}>\r\n                <div className={s.descElementWrap}>\r\n                    <b className={s.descElementTitle}>Full name:</b>\r\n                    {createField('full name', \"fullName\", [], Input)}\r\n                </div>\r\n                <div className={s.descElementWrap}>\r\n                    <b className={s.descElementTitle}>About:</b>\r\n                    {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n                </div>\r\n                <div className={s.descElementWrap}>\r\n                    <b className={s.descElementTitle}>Looking For A JOB</b>\r\n                    {createField(\"Looking for a job\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n                </div>\r\n                <div className={s.descElementWrap}>\r\n                    <b className={s.descElementTitle}>My Skills:</b>\r\n                    {createField(\"My Skills\", \"My Skills\", [], Textarea)}\r\n                </div>\r\n            </div>\r\n            {arrContacts}\r\n            <div>\r\n                {error && <div className={styles.formSummaryError}>\r\n                    {error}\r\n                </div>}\r\n            </div>\r\n            <div className={s.btnSubmit}>\r\n                <button style={{height: '30px'}}>submit</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ProfileDescFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDescForm)\r\n\r\nexport default ProfileDescFormReduxForm;\r\n","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileDesc from \"./ProfileDescription/ProfileDesc\";\r\nimport ProfilePhoto from \"./Avatar/ProfilePhoto\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatus/ProfileStatusWithHooks\"\r\nimport ProfileDescForm from \"./ProfileDescription/ProfileDescForm\"\r\nimport {useSelector} from \"react-redux\"\r\n\r\n\r\nconst ProfileInfo = ({errorMessage, isLoading, addPhoto, updateStatus, isOwner, saveProfile}) => {\r\n\r\n        const [isEditMode, setEditMode] = useState(false)\r\n\r\n        const profile = useSelector((state) => state.profilePage.profile)\r\n        const status = useSelector((state) => state.profilePage.status)\r\n\r\n        if (isLoading) {\r\n            return <Preloader/>\r\n        }\r\n\r\n        const onSubmit = (formData) => {\r\n            saveProfile(formData)\r\n                .then(\r\n                    () => {\r\n                        setEditMode(false)\r\n                    }\r\n                )\r\n        }\r\n\r\n        return (\r\n            <div className={s.profileInfo}>\r\n                {errorMessage ? <div style={{color: 'red'}}>{errorMessage}</div>\r\n                    : <>\r\n                        <ProfilePhoto addPhoto={addPhoto} isOwner={isOwner}/>\r\n                        <div>\r\n                            <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n                            {isEditMode\r\n                                ? <ProfileDescForm initialValues={profile}\r\n                                                   onSubmit={onSubmit}/>\r\n                                : <ProfileDesc profileData={profile}\r\n                                               changeData={setEditMode}\r\n                                               isOwner={isOwner}/>\r\n                            }\r\n                        </div>\r\n                    </>}\r\n            </div>\r\n\r\n        )\r\n    }\r\n;\r\n\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.myPost}>\r\n            <img src='https://d13ezvd6yrslxm.cloudfront.net/wp/wp-content/images/avatar-neytiri-sad.jpg' alt={'UserPhoto'}/>\r\n            <div>{props.message}</div>\r\n            <span className={s.like}>Like {props.likesCount}</span>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport s from './Posts.module.css';\r\nimport Post from \"./Post/Post\";\r\n// import PropTypes from 'prop-types';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControl/FormsControls\";\r\n\r\nconst Posts = React.memo((props) => {\r\n        const MyPosts = props.profilePage.postsData.map((obj) => <Post key={obj.id} message={obj.message}\r\n                                                                       likesCount={obj.likesCount}/>)\r\n        let onAddPost = (values) => {\r\n            props.addPost(values.newPostText);\r\n            // ADD-POST\r\n        };\r\n        return (\r\n            <div className={s.item}>\r\n                {!!props.isOwner &&\r\n                <>\r\n                    <PostsFormRedux onSubmit={onAddPost}/>\r\n\r\n                    <div className={s.posts}>\r\n                        {MyPosts}\r\n                    </div>\r\n                </>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n)\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst PostsForm = (props) => {\r\n    return (<form onSubmit={props.handleSubmit}>\r\n            <div className={s.input}>\r\n                <Field component={Textarea}\r\n                       name='newPostText'\r\n                       placeholder=\"What's up?\"\r\n                       validate={[required, maxLength10]}/>\r\n                <button>Запостить</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst PostsFormRedux = reduxForm({form: \"profileAddPostForm\"})(PostsForm);\r\n\r\n// Post.propTypes = {\r\n//     postsData: PropTypes.objectOf(PropTypes.shape({\r\n//             message: PropTypes.string.isRequired,\r\n//             likesCount: PropTypes.number.isRequired\r\n//         }.isRequired\r\n//         ).isRequired\r\n//     )\r\n// };\r\n\r\nexport default Posts;\r\n","// import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport {addPostActionCreator} from \"../../../redux/profile/profile-reducer\";\r\nimport Posts from \"./Posts\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profilePage: state.profilePage,\r\n        newPostText: state.profilePage.newPostText,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            // props.addPost();\r\n            dispatch(addPostActionCreator(newPostText));\r\n            // ADD-POST\r\n        },\r\n    }\r\n};\r\n\r\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts);\r\n\r\nexport default PostsContainer\r\n","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n// import PropTypes from 'prop-types';\r\nimport PostsContainer from \"./Posts/PostsContainer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <ProfileInfo errorMessage={props.errorMessage} isLoading={props.isLoading}\r\n                          updateStatus={props.updateStatus} addPhoto={props.addPhoto}\r\n                          isOwner={props.isOwner} saveProfile={props.saveProfile}/>\r\n            <PostsContainer isOwner={props.isOwner}/>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\n// Profile.PropTypes = {\r\n//     state: PropTypes.objectOf(PropTypes.shape({\r\n//         profilePage: PropTypes.objectOf.isRequired,\r\n//         postsData: PropTypes.objectOf.isRequired\r\n//     }).isRequired).isRequired\r\n// }\r\n\r\nexport default Profile;\r\n","// THUNK CREATOR:\r\nimport {\r\n    isPhotoLoading,\r\n    isProfileLoading,\r\n    setStatus,\r\n    setUserProfile,\r\n    uploadPhotoError,\r\n    uploadPhotoSuccess\r\n} from \"./profile-reducer\"\r\nimport {stopSubmit} from \"redux-form\"\r\nimport {profileAPI, usersAPI} from \"../../api/api\"\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    dispatch(isProfileLoading(true))\r\n    const response = await usersAPI.getProfile(userId)\r\n    dispatch(isProfileLoading(false))\r\n    dispatch(setUserProfile(response.data))\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    const response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data));\r\n}\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    const response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status))\r\n    }\r\n}\r\nexport const addPhoto = (myPhoto) => async (dispatch) => {\r\n    dispatch(isPhotoLoading(true))\r\n    const response = await profileAPI.uploadPhoto(myPhoto)\r\n    dispatch(isPhotoLoading(false))\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(uploadPhotoSuccess(response.data.data.photos))\r\n    } else {\r\n        dispatch(uploadPhotoError(response.data.messages[0]))\r\n    }\r\n}\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId\r\n    const response = await profileAPI.saveProfile(profile)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId))\r\n    } else if (response.data.resultCode === 1) {\r\n        dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0]}))\r\n        return Promise.reject(response.data.messages[0])\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from 'react-redux'\r\nimport {addPhoto, getStatus, getUserProfile, saveProfile, updateStatus} from \"../../redux/profile/profile-thunks\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\"\r\nimport {LOG_IN_PATH} from \"../Main/Routes\"\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile = () => {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(LOG_IN_PATH)\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    addPhoto = (myPhoto) => {\r\n        this.props.addPhoto(myPhoto)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     errorMessage={this.props.errorMessage}\r\n                     isLoading={this.props.isLoading}\r\n                     updateStatus={this.props.updateStatus}\r\n                     addPhoto={this.addPhoto}\r\n                     saveProfile={this.props.saveProfile}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    errorMessage: state.profilePage.errorMessage,\r\n    isLoading: state.profilePage.isLoading,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, addPhoto, saveProfile}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n","import React from 'react';\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControl/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login, logout} from \"../../redux/auth/auth-thunks\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport styles from '../../components/common/FormsControl/FormsControls.module.css'\r\n\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\r\n    return <form className={styles.loginWrapper} onSubmit={handleSubmit}>\r\n        {createField('Email', 'email', [required], Input)}\r\n        {createField('Password', 'password', [required], Input, {type: 'password'})}\r\n        <div className={styles.checkboxWrapper}>\r\n            {createField(null, 'rememberMe', null, Input, {type: 'checkbox'}, 'remember me')}\r\n        </div>\r\n        {captchaUrl && <div>\r\n            <img className={styles.captcha} src={captchaUrl} alt={\"captcha\"}/>\r\n            {createField('Symbols from image', 'captcha', [required], Input)}\r\n        </div>}\r\n        {error && <div className={styles.formSummaryError}>\r\n            {error}\r\n        </div>}\r\n        <button style={{height: '30px'}}>Login</button>\r\n    </form>\r\n};\r\n\r\nconst Login = ({login, isAuth, captchaUrl}) => {\r\n    const onSubmit = (formData) => {\r\n        login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n    };\r\n    if (isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    } else {\r\n        return <div className={styles.loginPage}>\r\n            <h1 className={styles.loginHeader}>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} captchaUrl={captchaUrl}/>\r\n        </div>\r\n    }\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\nconst mapStateToProps = (state) => ({isAuth: state.auth.isAuth, captchaUrl: state.auth.captchaUrl});\r\n\r\nexport default connect(mapStateToProps, {login, logout})(Login);\r\n","import React from 'react'\r\nimport DialogsContainer from \"../Dialogs/DialogsContainer\"\r\nimport ProfileContainer from \"../Profile/ProfileContainer\"\r\nimport {withSuspense} from \"../../hoc/withSuspense\"\r\nimport LoginPage from \"../Login/Login\"\r\nimport {Redirect, Route, Switch} from \"react-router-dom\"\r\nimport UsersContainer from \"../Users/UsersContainer\"\r\nimport '../../App.css'\r\n\r\nexport const START_GH_PAGES_PATH = '/social-network-react';\r\nexport const LOG_IN_PATH = START_GH_PAGES_PATH + '/login';\r\nexport const DIALOGS_PATH = START_GH_PAGES_PATH + '/dialogs';\r\nexport const PROFILE_PATH = START_GH_PAGES_PATH + '/profile';\r\nexport const USERS_PATH = START_GH_PAGES_PATH + '/users';\r\n\r\nconst Routes = () => (\r\n    <div className=\"app-content\">\r\n        <Switch>\r\n            <Route exact path='/' render={() => <Redirect to={PROFILE_PATH}/>}/>\r\n            <Route path={DIALOGS_PATH + '/:userId?'} render={() => <DialogsContainer/>}/>\r\n            <Route path={PROFILE_PATH + '/:userId?'} render={() => <ProfileContainer/>}/>\r\n            <Route path={USERS_PATH} render={withSuspense(UsersContainer)}/>\r\n            <Route path={LOG_IN_PATH} render={() => <LoginPage/>}/>\r\n            <Route path='*'\r\n                   render={() => <div style={{width: '525px'}}> ERROR 404. Page Not\r\n                       Found</div>}/>\r\n        </Switch>\r\n    </div>\r\n)\r\n\r\nexport default Routes;\r\n","import React, {Suspense} from 'react'\r\nimport Preloader from \"../components/common/Preloader/Preloader\"\r\n\r\nexport const withSuspense = (Component) => (props) => <Suspense fallback={Preloader}><Component {...props}/></Suspense>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {instance} from './api'\r\n\r\nexport const dialogsAPI = {\r\n    async getDialogs() {\r\n        const response = await instance.get(`dialogs/`)\r\n        return response.data\r\n    },\r\n    async startDialog(userId) {\r\n        const response = await instance.put(`dialogs/${userId}`)\r\n        return response.data\r\n    },\r\n    async getMessage(userId) {\r\n        const response = await instance.get(`dialogs/${userId}/messages`)\r\n        return response.data.items\r\n    },\r\n    async sendMessage(userId, message) {\r\n        const response = await instance.post(`dialogs/${userId}/messages`, {body: message})\r\n        return response.data\r\n    },\r\n    async deleteMessage(id) {\r\n        const response = await instance.delete(`dialogs/messages/${id}`)\r\n        return response.data\r\n    },\r\n}\r\n","import {dialogsAPI} from \"../../api/dialogs-api\"\r\nimport {\r\n    isLoadingDialogs,\r\n    setCurrentInterlocutorId,\r\n    setDialogs,\r\n    setLoadingMessages,\r\n    setMessages\r\n} from \"./dialogs-reducer\"\r\nimport {setRedirectToDialog} from \"../users/users-reducer\"\r\n\r\n\r\nexport const startDialog = (userId) => async (dispatch) => {\r\n    // dispatch(isLoadingDialogs(true))\r\n    const response = await dialogsAPI.startDialog(userId)\r\n    if (response.resultCode === 0) {\r\n        dispatch(setRedirectToDialog(userId))\r\n    }\r\n}\r\n\r\nexport const getDialogs = () => async (dispatch) => {\r\n    dispatch(isLoadingDialogs(true))\r\n    const dialogsList = await dialogsAPI.getDialogs()\r\n    dispatch(isLoadingDialogs(false))\r\n    dispatch(setDialogs(dialogsList))\r\n}\r\n\r\nexport const getMessages = (userId) => async (dispatch) => {\r\n    dispatch(setLoadingMessages(true))\r\n    const messagesList = await dialogsAPI.getMessage(userId)\r\n    dispatch(setLoadingMessages(false))\r\n    dispatch(setCurrentInterlocutorId(userId))\r\n    dispatch(setMessages(messagesList))\r\n}\r\n\r\nexport const sendMessage = (userId, message) => async (dispatch) => {\r\n    dispatch(setLoadingMessages(true))\r\n    const response = await dialogsAPI.sendMessage(userId, message)\r\n    dispatch(setLoadingMessages(false))\r\n    if (response.resultCode === 0) {\r\n        dispatch(getMessages(userId))\r\n    }\r\n}\r\n\r\nexport const deleteMessage = (id, userId) => async (dispatch) => {\r\n    dispatch(setLoadingMessages(true))\r\n    const response = await dialogsAPI.deleteMessage(id)\r\n    dispatch(setLoadingMessages(false))\r\n    if (response.resultCode === 0) {\r\n        dispatch(getMessages(userId))\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1Aa7J\",\"messages\":\"Dialogs_messages__2U-Z6\",\"message\":\"Dialogs_message__3pFln\",\"unViewed\":\"Dialogs_unViewed__YmnCL\",\"autorName\":\"Dialogs_autorName__2AHE6\",\"textMessage\":\"Dialogs_textMessage__LYvbS\"};","import {stopSubmit} from 'redux-form'\r\nimport {authAPI, securityAPI} from \"../../api/auth-api\"\r\n\r\nexport const SET_USER_DATA = 'SOCIAL-NETWORK/AUTH-REDUCER/SET_USER_DATA';\r\nexport const GET_CAPTCHA_URL_SUCCESS = 'SOCIAL-NETWORK/AUTH-REDUCER/GET_CAPTCHA_URL_SUCCESS';\r\n\r\nconst initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null, // if null, then captcha is not required\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                captchaUrl: action.captchaUrl,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default authReducer;\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {userId, email, login, isAuth}\r\n});\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({type: GET_CAPTCHA_URL_SUCCESS, captchaUrl});\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersContainer\":\"Users_usersContainer__3qP4s\",\"userPhoto\":\"Users_userPhoto__2GNy5\",\"users\":\"Users_users__1BKYL\",\"user\":\"Users_user__2Cijy\",\"photoContainer\":\"Users_photoContainer__26Y4i\",\"userDesc\":\"Users_userDesc__n-qTG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__ZDLMb\",\"item\":\"Navbar_item__3-lr_\",\"activeLink\":\"Navbar_activeLink__1hida\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogWrapper\":\"DialogItem_dialogWrapper__3xPg2\",\"dialog\":\"DialogItem_dialog__U2jvs\",\"avatarWrapper\":\"DialogItem_avatarWrapper__1tMlG\",\"avatar\":\"DialogItem_avatar__RtwHj\",\"nameWrapper\":\"DialogItem_nameWrapper__3TtMO\",\"newMessagesCountWrapper\":\"DialogItem_newMessagesCountWrapper__2H0v8\",\"newMessagesCount\":\"DialogItem_newMessagesCount__3E7uU\"};","import {authAPI, securityAPI} from \"../../api/auth-api\"\r\nimport {stopSubmit} from 'redux-form'\r\nimport {getCaptchaUrlSuccess, setAuthUserData} from \"./auth-reducer\"\r\n\r\n// THUNK CREATOR:\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    try {\r\n        const data = await authAPI.me()\r\n        if (data.resultCode !== 0) {\r\n        } else if (data.resultCode === 0) {\r\n            let {id, email, login} = data.data;\r\n            dispatch(setAuthUserData(id, email, login, true));\r\n        }\r\n    } catch (error) {\r\n        console.error(\r\n            // error.response.message ? error.response.message :\r\n            'error');\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    try {\r\n        const response = await authAPI.login(email, password, rememberMe, captcha)\r\n        if (response.data.resultCode === 0) {\r\n            // success\r\n            dispatch(getAuthUserData())\r\n        } else {\r\n            if (response.data.resultCode === 10) {\r\n                dispatch(getCaptchaUrl());\r\n            }\r\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error'\r\n            dispatch(stopSubmit(\"login\", {_error: message}));\r\n        }\r\n    } catch (error) {\r\n        console.error(error.response.message);\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    try {\r\n        const response = await authAPI.logout()\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false));\r\n        } else {\r\n            console.error(\"Fail logout\", response.data);\r\n        }\r\n    } catch (error) {\r\n        console.error(error.response.message);\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    try {\r\n        const response = await securityAPI.getCaptchaUrl()\r\n        const captchUrl = response.data.url\r\n        dispatch(getCaptchaUrlSuccess(captchUrl));\r\n    } catch (error) {\r\n        console.error(error.response.message);\r\n    }\r\n}\r\n","import React from 'react'\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\n\r\nconst Avatar = ({photo, ...props}) => {\r\n    const styleForAvatar = `${props.styled}`;\r\n    return <>\r\n        <img alt='Avatar'\r\n             src={photo || userPhoto}\r\n             className={styleForAvatar}/>\r\n    </>\r\n}\r\n\r\nexport default Avatar;\r\n","import {instance} from './api'\r\n\r\nexport const authAPI = {\r\n    async me() {\r\n        const response = await instance.get(`auth/me`)\r\n        return response.data\r\n    },\r\n    login(email, password, rememberMe = false, captcha = null) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha})\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n};\r\n\r\nexport const securityAPI = {\r\n    async getCaptchaUrl() {\r\n        return await instance.get(`security/get-captcha-url`)\r\n    },\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"SendForm_formWrapper__2TzLW\",\"textareaWrapper\":\"SendForm_textareaWrapper__DYZIF\",\"textarea\":\"SendForm_textarea__1lP8e\",\"buttonWrapper\":\"SendForm_buttonWrapper__2SmNt\",\"button\":\"SendForm_button__9W-Vn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__80lrY\",\"status\":\"ProfileInfo_status__3ne3X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photo\":\"ProfilePhoto_photo__9K17E\",\"errorMessage\":\"ProfilePhoto_errorMessage__obHc5\",\"navLink\":\"ProfilePhoto_navLink__V3G6A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Posts_item__2C1Gh\",\"posts\":\"Posts_posts__3FwCg\",\"input\":\"Posts_input__32s1e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Pagination_paginator__s0UZP\",\"pageNumber\":\"Pagination_pageNumber__3gVIf\",\"selectedPage\":\"Pagination_selectedPage__1fzD1\"};"],"sourceRoot":""}