{"version":3,"sources":["components/Profile/ProfileInfo/ProfileDescription/ProfileDesc.module.css","assets/images/user.png","assets/images/preloader.svg","components/Profile/Profile.module.css","assets/images/right-tick.svg","assets/images/false-tick.svg","components/Footer/Footer.module.css","components/common/FormsControl/FormsControls.module.css","serviceWorker.js","api/api.js","redux/profile/profile-reducer.js","redux/dialogs/dialogs-reducer.js","redux/sidebar-following/sidebar-reducer.js","utils/object-helper-immutable-change.js","redux/users/users-reducer.js","api/auth-api.js","redux/auth/auth-reducer.js","redux/auth/auth-thunks.js","redux/main/app-reducer.js","redux/redux-store.js","components/Header/Header.jsx","components/Header/HeaderCountainer.jsx","api/dialogs-api.js","redux/dialogs/dialogs-thunks.js","components/common/UserAvatar/Avatar.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","utils/validators/validators.js","components/common/FormsControl/FormsControls.js","components/Dialogs/Message/SendForm.jsx","components/common/Preloader/Preloader.js","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx","components/Profile/ProfileInfo/ProfileDescription/ProfileDesc.jsx","components/Profile/ProfileInfo/Avatar/ProfilePhoto.jsx","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDescription/ProfileDescForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Posts/Post/Post.jsx","components/Profile/Posts/Posts.jsx","components/Profile/Posts/PostsContainer.jsx","components/Profile/Profile.jsx","redux/profile/profile-thunks.js","components/Profile/ProfileContainer.jsx","components/Login/Login.jsx","redux/users/users-thunks.js","components/common/Pagination/Pagination.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users/users-selectors.js","components/Users/UsersContainer.jsx","components/Main/Routes.jsx","hoc/withSuspense.js","components/Navbar/Navbar.jsx","components/Footer/Footer.jsx","components/Sidebar/Sidebar.jsx","components/Sidebar/SidebarContainer.jsx","components/common/ErrorModal/ModalSimpleMessage.jsx","components/common/ErrorModal/ModalsContainer.jsx","components/common/ErrorModal/ModalsPage.jsx","App.js","index.js","redux/errors-handler.js","components/Dialogs/Dialogs.module.css","components/Users/Users.module.css","components/Navbar/Navbar.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/SendForm.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/Avatar/ProfilePhoto.module.css","components/Profile/Posts/Posts.module.css","components/common/Pagination/Pagination.module.css","components/Header/Header.module.css","components/Profile/Posts/Post/Post.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","handler401","errorHandler","ADD_POST","SET_USER_PROFILE","LOADING_PROFILE","SET_STATUS","DELETE_POST","UPLOAD_PHOTO_SUCCESS","UPLOAD_PHOTO_ERROR","LOADING_PHOTO","initialState","postsData","id","message","likesCount","profile","aboutMe","contacts","facebook","lookingForAJob","lookingForAJobDescription","fullName","userId","photos","small","large","isPhotoLoading","errorPhotoLoadingMessage","status","isLoading","errorMessage","profileReducer","state","action","type","newPost","newPostText","filter","p","postId","isProfileLoading","setStatus","SEND_MESSAGE","SET_MESSAGES","IS_MESSAGES_LOADING","IS_DIALOGS_LOADING","SET_INTERLOCUTOR_ID","SET_DIALOGS","messagesData","dialogsData","currentInterlocutorId","isDialogsLoading","dialogsReducer","dialogsList","body","newMessage","messagesList","setMessages","setLoadingMessages","isLoadingDialogs","setDialogs","friendsName","name","sidebarReducer","updateObjectArray","items","itemId","objPropName","newObjProps","map","i","FOLLOW","UNFOLLOW","SET_USERS","SET_REDIRECT_TO_DIALOGS","SET_CURRENT_PAGE","SET_USERS_TOTAL_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","redirectToDialogId","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","usersReducer","followed","count","followSuccess","unfollowSuccess","setRedirectToDialog","setCurrentPage","toggleIsFetching","toggleIsFollowingProgress","instance","axios","withCredentials","baseURL","headers","interceptors","response","use","error","Promise","reject","usersAPI","getUsers","get","then","data","follow","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","put","uploadPhoto","photoFile","formData","FormData","append","saveProfile","authAPI","email","password","rememberMe","captcha","securityAPI","SET_USER_DATA","GET_CAPTCHA_URL_SUCCESS","login","isAuth","captchaUrl","authReducer","payload","setAuthUserData","getAuthUserData","dispatch","a","async","resultCode","logout","getCaptchaUrl","captchUrl","url","INITIALIZED_SUCCESS","SET_ERROR","initialized","appReducer","setError","reducers","combineReducers","profilePage","messagesPage","sidebar","usersPage","auth","app","form","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Header","props","className","s","header","loginBlock","onClick","to","HeaderContainer","this","Component","connect","dialogsAPI","getDialogs","getMessages","Avatar","photo","styleForAvatar","styled","alt","src","userPhoto","DialogItem","dialogWrapper","DIALOGS_PATH","dialog","avatarWrapper","avatar","nameWrapper","isNewMessage","newMessagesCountWrapper","newMessagesCount","Message","cn","unViewed","viewed","autorName","textMessage","deleteMessage","required","value","maxLengthCreator","maxLength","length","FormControl","meta","touched","children","hasError","styles","formControl","Textarea","input","restProps","child","Input","createField","placeholder","validators","component","text","style","display","width","marginBottom","alignItems","Field","validate","marginLeft","maxLength100","AddMessageFormRedux","reduxForm","onSubmit","handleSubmit","formWrapper","textareaWrapper","textarea","buttonWrapper","button","Preloader","preloader","Dialogs","dialogsPage","useParams","useState","isMessagesWindow","activatingMessagesWindow","useDispatch","useEffect","refreshDialogs","dialogsArr","useSelector","messagesArr","isMessagesLoading","onDeleteMessage","dialogsElements","userName","key","hasNewMessages","messagesElements","m","companionId","recipientId","senderName","dialogs","messages","values","sendMessage","newMessageBody","dialogsItems","LOG_IN_PATH","mapStateToPropsForRedirect","withAuthRedirect","RedirectComponent","React","withRouter","ProfileDesc","Contact","contactTitle","contactValue","objContacts","profileData","arrContacts","Object","keys","descriptionProfile","isOwner","btnEdit","changeData","rightTick","icon","falseTick","ProfilePhoto","addPhoto","inputElement","useRef","marginRight","height","justifyContent","navLink","onChange","e","target","files","onPhotoUpload","ref","current","click","ProfileStatusWithHooks","editMode","setEditMode","onDoubleClick","currentTarget","autoFocus","onBlur","ProfileDescFormReduxForm","descElementWrap","descElementTitle","editForm","editDescription","formSummaryError","btnSubmit","ProfileInfo","isEditMode","profileInfo","color","initialValues","Post","myPost","like","Posts","memo","MyPosts","obj","item","PostsFormRedux","addPost","posts","maxLength10","PostsContainer","addPostActionCreator","Profile","content","getUserProfile","ProfileContainer","refreshProfile","params","authorizedUserId","history","push","myPhoto","prevProps","prevState","snapshot","getState","stopSubmit","_error","LoginReduxForm","loginWrapper","checkboxWrapper","loginPage","loginHeader","followUnfollowFlow","apiMethod","actionCreator","Pagination","totalItemsCount","onPageChanged","portionSize","portionNumber","setPortionNumber","pagesCount","Math","ceil","pages","portionCount","leftPortionPageNumber","rightPortionPageNumber","paginator","selectedPage","pageNumber","User","user","photoContainer","PROFILE_PATH","disabled","some","userDesc","Users","usersContainer","u","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","getRedirectToDialogId","UsersContainer","startDialog","bind","requestPage","totalCount","START_GH_PAGES_PATH","Routes","exact","path","render","DialogsContainer","fallback","Navbar","nav","activeClassName","activeLink","Footer","footer","Sidebar","SidebarContainer","Modal","show","blackout","position","top","left","backgroundColor","opacity","borderRadius","ModalContainer","flexDirection","margin","right","padding","ModalsPage","ModalsContainer","App","catchAllUnhandledErrors","reason","promise","initializeApp","addEventListener","removeEventListener","AppContainer","all","MainApp","basename","process","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1cd5470a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnEdit\":\"ProfileDesc_btnEdit__3DZPh\",\"name\":\"ProfileDesc_name__2EMZc\",\"icon\":\"ProfileDesc_icon__VrKIe\",\"contactTitle\":\"ProfileDesc_contactTitle__huWij\",\"editForm\":\"ProfileDesc_editForm__3O9Gu\",\"editDescription\":\"ProfileDesc_editDescription__16nqp\",\"descElementWrap\":\"ProfileDesc_descElementWrap__3nuta\",\"descElementTitle\":\"ProfileDesc_descElementTitle__3bNnQ\",\"btnSubmit\":\"ProfileDesc_btnSubmit__1Os0z\"};","module.exports = __webpack_public_path__ + \"static/media/user.b6a2af8d.png\";","module.exports = __webpack_public_path__ + \"static/media/preloader.dd257cf1.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__3klPd\"};","module.exports = __webpack_public_path__ + \"static/media/right-tick.9fcfd417.svg\";","module.exports = __webpack_public_path__ + \"static/media/false-tick.54d5c263.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__3YFvC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginPage\":\"FormsControls_loginPage__cr2k1\",\"loginHeader\":\"FormsControls_loginHeader__1NDcj\",\"loginWrapper\":\"FormsControls_loginWrapper__3kLVI\",\"checkboxWrapper\":\"FormsControls_checkboxWrapper__11-k0\",\"formControl\":\"FormsControls_formControl__nZE5u\",\"error\":\"FormsControls_error__1uHuk\",\"formSummaryError\":\"FormsControls_formSummaryError__1f1nd\",\"captcha\":\"FormsControls_captcha__wkOfi\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        //main\r\n        'API-KEY': '7dc52db3-0d14-44ab-80ee-40d908279e0f'\r\n\r\n        // emp\r\n        // 'API-KEY': '44e15dfc-6469-4cef-80d5-de74742b85b4'\r\n    },\r\n});\r\n\r\nlet handler401;\r\n\r\nexport const setHandler401 = (callback) => {\r\n    handler401 = callback;\r\n}\r\n\r\nlet errorHandler;\r\n\r\nexport const setErrorHandler = (callback) => {\r\n    errorHandler = callback;\r\n}\r\n\r\ninstance.interceptors.response.use(response => {\r\n        return response\r\n    },\r\n    error => {\r\n        if (error.response.status === 401) {\r\n            handler401()\r\n        } else {\r\n            errorHandler(error.message)\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n)\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`,\r\n        ).then(response => response.data)\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`, {})\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`,)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsoleted method');\r\n        return profileAPI.getProfile(userId)\r\n    }\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status/`, {status: status});\r\n    },\r\n    uploadPhoto(photoFile) {\r\n        let formData = new FormData();\r\n        formData.append('image', photoFile);\r\n        return instance.put(`profile/photo/`, formData, 'multipart/form-data')\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`profile/`, profile)\r\n    },\r\n};\r\n","\r\nexport const ADD_POST = \"SOCIAL-NETWORK/PROFILE-REDUCER/ADD-POST\";\r\nexport const SET_USER_PROFILE = 'SOCIAL-NETWORK/PROFILE-REDUCER/SET_USER_PROFILE';\r\nexport const LOADING_PROFILE = 'SOCIAL-NETWORK/PROFILE-REDUCER/LOADING_PROFILE';\r\nexport const SET_STATUS = 'SOCIAL-NETWORK/PROFILE-REDUCER/SET_STATUS';\r\nexport const DELETE_POST = 'SOCIAL-NETWORK/PROFILE-REDUCER/DELETE_POST';\r\nexport const UPLOAD_PHOTO_SUCCESS = 'SOCIAL-NETWORK/PROFILE-REDUCER/UPLOAD_PHOTO_SUCCESS';\r\nexport const UPLOAD_PHOTO_ERROR = 'SOCIAL-NETWORK/PROFILE-REDUCER/UPLOAD_PHOTO_ERROR';\r\nexport const LOADING_PHOTO = 'SOCIAL-NETWORK/PROFILE-REDUCER/LOADING_PHOTO';\r\n\r\nconst initialState = {\r\n        postsData: [\r\n            // {id: 1, message: 'My Post', likesCount: 1},\r\n            // {id: 2, message: 'My Post 2', likesCount: 3},\r\n            {id: 3, message: \"Hello World! What's up?\", likesCount: 25},\r\n        ],\r\n        profile:\r\n            {\r\n                aboutMe: '',\r\n                contacts: {facebook: ''},\r\n                lookingForAJob: true,\r\n                lookingForAJobDescription: '',\r\n                fullName: '',\r\n                userId: null, //number\r\n                photos: {small: '', large: ''},\r\n                isPhotoLoading: false,\r\n                errorPhotoLoadingMessage: '',\r\n            },\r\n        status: '',\r\n        isLoading: false,\r\n        errorMessage: '',\r\n    }\r\n;\r\n\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 6,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData, newPost],\r\n                newPostText: ''\r\n            }\r\n        }\r\n        case  SET_USER_PROFILE: {\r\n            return {\r\n                ...state, profile: {...state.profile, ...action.profile}\r\n            };\r\n        }\r\n        case  LOADING_PROFILE: {\r\n            return {\r\n                ...state, isLoading: action.isLoading\r\n            };\r\n        }\r\n        case  DELETE_POST: {\r\n            return {\r\n                ...state, postsData: state.postsData.filter(p => p.id !== action.postId)\r\n            }\r\n        }\r\n        case\r\n        SET_STATUS: {\r\n            return {\r\n                ...state, status: action.status\r\n            };\r\n        }\r\n        case\r\n        UPLOAD_PHOTO_SUCCESS: {\r\n            return {\r\n                ...state, profile: {...state.profile, photos: action.photos}\r\n            };\r\n        }\r\n        case\r\n        UPLOAD_PHOTO_ERROR: {\r\n            return {\r\n                ...state, profile: {...state.profile, errorPhotoLoadingMessage: action.message}\r\n            };\r\n        }\r\n        case\r\n        LOADING_PHOTO: {\r\n            return {\r\n                ...state, profile: {...state.profile, isPhotoLoading: action.isLoading}\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default profileReducer;\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText});\r\n\r\n\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const isProfileLoading = (isLoading) => ({type: LOADING_PROFILE, isLoading});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\nexport const uploadPhotoSuccess = (photos) => ({type: UPLOAD_PHOTO_SUCCESS, photos});\r\nexport const uploadPhotoError = (message) => ({type: UPLOAD_PHOTO_ERROR, message});\r\nexport const isPhotoLoading = (isLoading) => ({type: LOADING_PHOTO, isLoading});\r\n\r\n","export const SEND_MESSAGE = 'SOCIAL-NETWORK/DIALOGS-REDUCER/SEND-MESSAGE';\r\nexport const SET_MESSAGES = 'SOCIAL-NETWORK/DIALOGS-REDUCER/SET-MESSAGES';\r\nexport const IS_MESSAGES_LOADING = 'SOCIAL-NETWORK/DIALOGS-REDUCER/IS_MESSAGES_LOADING';\r\nexport const IS_DIALOGS_LOADING = 'SOCIAL-NETWORK/DIALOGS-REDUCER/IS_DIALOGS_LOADING';\r\nexport const SET_INTERLOCUTOR_ID = 'SOCIAL-NETWORK/DIALOGS-REDUCER/SET_INTERLOCUTOR_ID';\r\nexport const SET_DIALOGS = 'SOCIAL-NETWORK/DIALOGS-REDUCER/SET_DIALOGS';\r\nexport const START_DIALOG = 'SOCIAL-NETWORK/DIALOGS-REDUCER/START_DIALOG';\r\n\r\n\r\nconst initialState = {\r\n    messagesData: [\r\n        //отправка\r\n        // {\r\n        //     \"data\": {\r\n        //         \"message\": {\r\n        //             \"id\": \"c7e99ff5-f656-4457-a8ee-53f90ede7320\",\r\n        //             \"body\": \"Hello\",\r\n        //             \"translatedBody\": null,\r\n        //             \"addedAt\": \"2019-12-08T11:33:47.977\",\r\n        //             \"senderId\": 1567,\r\n        //             \"senderName\": \"ibulavsky\",\r\n        //             \"recipientId\": 1570,\r\n        //             \"recipientName\": \"Gaypt1994\",\r\n        //             \"viewed\": false,\r\n        //             \"deletedBySender\": false,\r\n        //             \"deletedByRecipient\": false,\r\n        //             \"isSpam\": false,\r\n        //             \"distributionId\": null\r\n        //         }\r\n        //     }, \"messages\": [], \"resultCode\": 0\r\n        // },\r\n        // {\r\n        //     \"id\": \"c7e99ff5-f656-4457-a8ee-53f90ede7320\",\r\n        //     \"body\": \"Hello\",\r\n        //     \"translatedBody\": null,\r\n        //     \"addedAt\": \"2019-12-08T11:33:47.977\",\r\n        //     \"senderId\": 1567,\r\n        //     \"senderName\": \"ibulavsky\",\r\n        //     \"recipientId\": 1570,\r\n        //     \"viewed\": false\r\n        // },\r\n    ],\r\n\r\n    dialogsData: [\r\n        // {\r\n        //     \"id\": 1570,\r\n        //     \"userName\": \"Gaypt1994\",\r\n        //     \"hasNewMessages\": true,\r\n        //     \"lastDialogActivityDate\": \"2019-12-08T08:58:57.967\",\r\n        //     \"lastUserActivityDate\": \"2019-12-07T19:12:19.397\",\r\n        //     \"newMessagesCount\": 5,\r\n        //     \"photos\": {\r\n        //         \"small\": \"https://social-network.samuraijs.com/activecontent/images/users/1570/user-small.jpg?v=1\",\r\n        //         \"large\": \"https://social-network.samuraijs.com/activecontent/images/users/1570/user.jpg?v=1\"\r\n        //     }\r\n        // },\r\n        // {\r\n        //     \"id\": 1570,\r\n        //     \"userName\": \"Gaypt1994\",\r\n        //     \"hasNewMessages\": true,\r\n        //     \"lastDialogActivityDate\": \"2019-12-08T08:58:57.967\",\r\n        //     \"lastUserActivityDate\": \"2019-12-07T19:12:19.397\",\r\n        //     \"newMessagesCount\": 5,\r\n        //     \"photos\": {\r\n        //         \"small\": \"https://social-network.samuraijs.com/activecontent/images/users/1570/user-small.jpg?v=1\",\r\n        //         \"large\": \"https://social-network.samuraijs.com/activecontent/images/users/1570/user.jpg?v=1\"\r\n        //     }\r\n        // },\r\n    ],\r\n    currentInterlocutorId: '',\r\n    isDialogsLoading: false,\r\n    isLoading: false,\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case IS_DIALOGS_LOADING:\r\n            return {\r\n                ...state,\r\n                isDialogsLoading: action.isLoading\r\n            };\r\n        case SET_DIALOGS:\r\n            return {\r\n                ...state,\r\n                dialogsData: action.dialogsList,\r\n            };\r\n        case SET_INTERLOCUTOR_ID:\r\n            return {\r\n                ...state,\r\n                currentInterlocutorId: action.currentInterlocutorId,\r\n            };\r\n        case IS_MESSAGES_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: action.isLoading\r\n            };\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessage;\r\n            return {\r\n                ...state,\r\n                messagesData: [...state.messagesData, {id: 6, message: body}],\r\n            };\r\n        case SET_MESSAGES:\r\n            return {\r\n                ...state,\r\n                messagesData: action.messagesList,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default dialogsReducer;\r\n\r\nexport const sendMessageCreator = (newMessage) => ({type: SEND_MESSAGE, newMessage});\r\nexport const setMessages = (messagesList) => ({type: SET_MESSAGES, messagesList});\r\nexport const setLoadingMessages = (isLoading) => ({type: IS_MESSAGES_LOADING, isLoading});\r\nexport const setCurrentInterlocutorId = (currentInterlocutorId) => ({type: SET_INTERLOCUTOR_ID, currentInterlocutorId});\r\nexport const isLoadingDialogs = (isLoading) => ({type: IS_DIALOGS_LOADING, isLoading});\r\nexport const setDialogs = (dialogsList) => ({type: SET_DIALOGS, dialogsList});\r\n","const initialState = {\r\n    friendsName: [\r\n        {name: \"Victor\", id: 1},\r\n        {name: \"Vadim\", id: 2},\r\n        {name: \"Max\", id: 3}\r\n    ]\r\n}\r\n\r\nconst sidebarReducer= (state = initialState, action) => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","export const updateObjectArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(i => {\r\n        if (i[objPropName] === itemId) {\r\n            return {...i, ...newObjProps}\r\n        }\r\n        return i;\r\n    })\r\n\r\n}\r\n","import {updateObjectArray} from \"../../utils/object-helper-immutable-change\"\r\n\r\nexport const FOLLOW = 'SOCIAL-NETWORK/USERS-REDUCER/FOLLOW';\r\nexport const UNFOLLOW = 'SOCIAL-NETWORK/USERS-REDUCER/UNFOLLOW';\r\nexport const SET_USERS = 'SOCIAL-NETWORK/USERS-REDUCER/SET_USERS';\r\nexport const SET_REDIRECT_TO_DIALOGS = 'SOCIAL-NETWORK/USERS-REDUCER/SET_REDIRECT_TO_DIALOGS';\r\nexport const SET_CURRENT_PAGE = 'SOCIAL-NETWORK/USERS-REDUCER/SET_CURRENT_PAGE';\r\nexport const SET_USERS_TOTAL_COUNT = 'SOCIAL-NETWORK/USERS-REDUCER/SET_USERS_TOTAL_COUNT';\r\nexport const TOGGLE_IS_FETCHING = 'SOCIAL-NETWORK/USERS-REDUCER/TOGGLE_IS_FETCHING';\r\nexport const TOGGLE_IS_FOLLOWING_PROGRESS = 'SOCIAL-NETWORK/USERS-REDUCER/TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\nconst initialState = {\r\n    users: [],\r\n    redirectToDialogId: null,\r\n    pageSize: 10,\r\n    totalUsersCount: 20,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectArray(state.users, action.userId, 'id', {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectArray(state.users, action.userId, 'id', {followed: false})\r\n            }\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: [...action.users]\r\n            }\r\n        }\r\n        case SET_REDIRECT_TO_DIALOGS: {\r\n            return {\r\n                ...state,\r\n                redirectToDialogId: action.userId\r\n            }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n        case SET_USERS_TOTAL_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.count\r\n            }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default usersReducer;\r\n\r\n// Action Creators:\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setRedirectToDialog = (userId) => ({type: SET_REDIRECT_TO_DIALOGS, userId});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalCount) => ({type: SET_USERS_TOTAL_COUNT, count: totalCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleIsFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n","import {instance} from './api'\r\n\r\nexport const authAPI = {\r\n    async me() {\r\n        const response = await instance.get(`auth/me`)\r\n        return response.data\r\n    },\r\n    login(email, password, rememberMe = false, captcha = null) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha})\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n};\r\n\r\nexport const securityAPI = {\r\n    async getCaptchaUrl() {\r\n        return await instance.get(`security/get-captcha-url`)\r\n    },\r\n};\r\n","import {stopSubmit} from 'redux-form'\r\nimport {authAPI, securityAPI} from \"../../api/auth-api\"\r\n\r\nexport const SET_USER_DATA = 'SOCIAL-NETWORK/AUTH-REDUCER/SET_USER_DATA';\r\nexport const GET_CAPTCHA_URL_SUCCESS = 'SOCIAL-NETWORK/AUTH-REDUCER/GET_CAPTCHA_URL_SUCCESS';\r\n\r\nconst initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null, // if null, then captcha is not required\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                captchaUrl: action.captchaUrl,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default authReducer;\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {userId, email, login, isAuth}\r\n});\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({type: GET_CAPTCHA_URL_SUCCESS, captchaUrl});\r\n\r\n","import {authAPI, securityAPI} from \"../../api/auth-api\"\r\nimport {stopSubmit} from 'redux-form'\r\nimport {getCaptchaUrlSuccess, setAuthUserData} from \"./auth-reducer\"\r\n\r\n// THUNK CREATOR:\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    try {\r\n        const data = await authAPI.me()\r\n        if (data.resultCode !== 0) {\r\n        } else if (data.resultCode === 0) {\r\n            let {id, email, login} = data.data;\r\n            dispatch(setAuthUserData(id, email, login, true));\r\n        }\r\n    } catch (error) {\r\n        console.error(\r\n            // error.response.message ? error.response.message :\r\n            'error');\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    try {\r\n        const response = await authAPI.login(email, password, rememberMe, captcha)\r\n        if (response.data.resultCode === 0) {\r\n            // success\r\n            dispatch(getAuthUserData())\r\n        } else {\r\n            if (response.data.resultCode === 10) {\r\n                dispatch(getCaptchaUrl());\r\n            }\r\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error'\r\n            dispatch(stopSubmit(\"login\", {_error: message}));\r\n        }\r\n    } catch (error) {\r\n        console.error(error.response.message);\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    try {\r\n        const response = await authAPI.logout()\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false));\r\n        } else {\r\n            console.error(\"Fail logout\", response.data);\r\n        }\r\n    } catch (error) {\r\n        console.error(error.response.message);\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    try {\r\n        const response = await securityAPI.getCaptchaUrl()\r\n        const captchUrl = response.data.url\r\n        dispatch(getCaptchaUrlSuccess(captchUrl));\r\n    } catch (error) {\r\n        console.error(error.response.message);\r\n    }\r\n}\r\n","import {getAuthUserData} from \"../auth/auth-thunks\";\r\n\r\nexport const INITIALIZED_SUCCESS = 'SOCIAL-NETWORK/APP-REDUCER/INITIALIZED_SUCCESS';\r\nexport const SET_ERROR = 'SOCIAL-NETWORK/APP-REDUCER/SET_ERROR';\r\n\r\nconst initialState = {\r\n    initialized: false,\r\n    errorMessage: '',\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            };\r\n        case SET_ERROR:\r\n            return {\r\n                ...state,\r\n                errorMessage: action.errorMessage,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default appReducer;\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\nexport const setError = (errorMessage) => ({type: SET_ERROR, errorMessage});\r\n\r\n\r\n// THUNK CREATOR:\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise]).then(() => {\r\n        dispatch(initializedSuccess());\r\n    })\r\n};\r\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile/profile-reducer\";\r\nimport dialogsReducer from \"./dialogs/dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-following/sidebar-reducer\";\r\nimport usersReducer from \"./users/users-reducer\";\r\nimport authReducer from \"./auth/auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport appReducer from \"./main/app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer,\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)))\r\nexport default store;\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <div className={s.loginBlock}>\r\n                {\r\n                    props.isAuth\r\n                        ? <> <span> {props.login} - </span>\r\n                            <button onClick={props.logout}> Log Out </button>\r\n                        </>\r\n                        : <NavLink to='/login'>Login</NavLink>\r\n                }\r\n            </div>\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default Header;\r\n","import React, {Component} from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth/auth-thunks\";\r\n\r\nclass HeaderContainer extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);\r\n","import {instance} from './api'\r\n\r\nexport const dialogsAPI = {\r\n    async getDialogs() {\r\n        const response = await instance.get(`dialogs/`)\r\n        return response.data\r\n    },\r\n    async startDialog(userId) {\r\n        const response = await instance.put(`dialogs/${userId}`)\r\n        return response.data\r\n    },\r\n    async getMessage(userId) {\r\n        const response = await instance.get(`dialogs/${userId}/messages`)\r\n        return response.data.items\r\n    },\r\n    async sendMessage(userId, message) {\r\n        const response = await instance.post(`dialogs/${userId}/messages`, {body: message})\r\n        return response.data\r\n    },\r\n    async deleteMessage(id) {\r\n        const response = await instance.delete(`dialogs/messages/${id}`)\r\n        return response.data\r\n    },\r\n}\r\n","import {dialogsAPI} from \"../../api/dialogs-api\"\r\nimport {\r\n    isLoadingDialogs,\r\n    setCurrentInterlocutorId,\r\n    setDialogs,\r\n    setLoadingMessages,\r\n    setMessages\r\n} from \"./dialogs-reducer\"\r\nimport {setRedirectToDialog} from \"../users/users-reducer\"\r\n\r\n\r\nexport const startDialog = (userId) => async (dispatch) => {\r\n    // dispatch(isLoadingDialogs(true))\r\n    const response = await dialogsAPI.startDialog(userId)\r\n    if (response.resultCode === 0) {\r\n        dispatch(setRedirectToDialog(userId))\r\n    }\r\n}\r\n\r\nexport const getDialogs = () => async (dispatch) => {\r\n    dispatch(isLoadingDialogs(true))\r\n    const dialogsList = await dialogsAPI.getDialogs()\r\n    dispatch(isLoadingDialogs(false))\r\n    dispatch(setDialogs(dialogsList))\r\n}\r\n\r\nexport const getMessages = (userId) => async (dispatch) => {\r\n    dispatch(setLoadingMessages(true))\r\n    const messagesList = await dialogsAPI.getMessage(userId)\r\n    dispatch(setLoadingMessages(false))\r\n    dispatch(setCurrentInterlocutorId(userId))\r\n    dispatch(setMessages(messagesList))\r\n}\r\n\r\nexport const sendMessage = (userId, message) => async (dispatch) => {\r\n    dispatch(setLoadingMessages(true))\r\n    const response = await dialogsAPI.sendMessage(userId, message)\r\n    dispatch(setLoadingMessages(false))\r\n    if (response.resultCode === 0) {\r\n        dispatch(getMessages(userId))\r\n    }\r\n}\r\n\r\nexport const deleteMessage = (id, userId) => async (dispatch) => {\r\n    dispatch(setLoadingMessages(true))\r\n    const response = await dialogsAPI.deleteMessage(id)\r\n    dispatch(setLoadingMessages(false))\r\n    if (response.resultCode === 0) {\r\n        dispatch(getMessages(userId))\r\n    }\r\n}\r\n","import React from 'react'\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\n\r\nconst Avatar = ({photo, ...props}) => {\r\n    const styleForAvatar = `${props.styled}`;\r\n    return <>\r\n        <img alt='Avatar'\r\n             src={photo || userPhoto}\r\n             className={styleForAvatar}/>\r\n    </>\r\n}\r\n\r\nexport default Avatar;\r\n","import React from 'react';\r\nimport s from './DialogItem.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport PropTypes from 'prop-types';\r\nimport Avatar from \"../../common/UserAvatar/Avatar\"\r\nimport {DIALOGS_PATH} from \"../../Main/Routes\"\r\n\r\nconst DialogItem = (props) => {\r\n\r\n    return (\r\n        <div className={s.dialogWrapper}>\r\n            <NavLink to={`${DIALOGS_PATH}/${props.id}`} className={s.dialog}>\r\n                <div className={s.avatarWrapper}>\r\n                    <Avatar photo={props.photo} styled={s.avatar}/>\r\n                </div>\r\n                <div className={s.nameWrapper}>\r\n                    {props.name}\r\n                </div>\r\n                {props.isNewMessage\r\n                    ? <div className={s.newMessagesCountWrapper}>\r\n                        <span className={s.newMessagesCount}>\r\n                            {props.newMessagesCount}\r\n                        </span>\r\n                    </div>\r\n                    : null}\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nDialogItem.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    name: PropTypes.string.isRequired\r\n}\r\n\r\nexport default DialogItem;\r\n","import React from 'react';\r\nimport cn from 'classnames';\r\nimport s from './../Dialogs.module.css';\r\n\r\nfunction Message(props) {\r\n    return <>\r\n\r\n        <div className={cn(s.message, {[`${s.unViewed}`]: !props.viewed})}>\r\n            <div>\r\n                <span className={s.autorName}>\r\n                    {props.name}:\r\n                </span>\r\n                <span className={s.textMessage}>\r\n                    {props.message}\r\n            </span>\r\n                <button onClick={() => props.deleteMessage(props.id)}>\r\n                    Delete\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default Message;\r\n","export const required = value => {\r\n    if (value) return undefined;\r\n    return 'Field is required!';\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value) {\r\n        if (value.length > maxLength) return `Max length is ${maxLength} symbols!`;\r\n    }\r\n    return undefined;\r\n};\r\n\r\n","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\"\r\nimport {Field} from \"redux-form\"\r\n\r\nconst FormControl = ({meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {/*<br/>*/}\r\n            <div>\r\n                {hasError && <span>{error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}> <textarea {...input} {...restProps} /></FormControl>\r\n};\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}> <input {...input} {...restProps} /></FormControl>\r\n};\r\n\r\nexport const createField = (placeholder, name, validators, component, props, text) => (\r\n    <div style={{display: 'flex', width: '150px', marginBottom: '5px', alignItems: 'center'}}>\r\n        <Field\r\n            placeholder={placeholder}\r\n            name={name}\r\n            validate={validators}\r\n            component={component}\r\n            {...props}/>\r\n        <span style={{width: '200px', marginLeft: '-70px'}}>\r\n            {text}\r\n        </span>\r\n    </div>\r\n)\r\n","import React from 'react'\r\nimport {maxLengthCreator} from \"../../../utils/validators/validators\"\r\nimport {Field, reduxForm} from \"redux-form\"\r\nimport {Textarea} from \"../../common/FormsControl/FormsControls\"\r\nimport s from './SendForm.module.css'\r\n\r\nconst maxLength100 = maxLengthCreator(100)\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (<form onSubmit={props.handleSubmit}>\r\n            <div className={s.formWrapper}>\r\n                <div className={s.textareaWrapper}>\r\n                    <Field className={s.textarea}\r\n                           component={Textarea}\r\n                           validate={maxLength100}\r\n                           name='newMessageBody'\r\n                           placeholder='Enter your message'\r\n                    />\r\n                </div>\r\n                <div className={s.buttonWrapper}>\r\n                    <button className={s.button}>Send</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm);\r\n","import preloader from \"../../../assets/images/preloader.svg\";\r\nimport React from \"react\";\r\n\r\nlet Preloader = () => {\r\n    return <div>\r\n    <img alt={'Preloader'} src={preloader}/>\r\n    </div>\r\n};\r\n\r\nexport default Preloader;\r\n","import React, {useState, useEffect} from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect, useParams, NavLink} from \"react-router-dom\";\r\nimport {AddMessageFormRedux} from \"./Message/SendForm\"\r\nimport Preloader from \"../common/Preloader/Preloader\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {deleteMessage, getDialogs, sendMessage} from \"../../redux/dialogs/dialogs-thunks\"\r\nimport {DIALOGS_PATH, LOG_IN_PATH} from \"../Main/Routes\"\r\n\r\nconst Dialogs = ({dialogsPage, ...props}) => {\r\n\r\n    const {userId} = useParams()\r\n\r\n    const [isMessagesWindow, activatingMessagesWindow] = useState(false)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getDialogs())\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        refreshDialogs()\r\n    }, [userId])\r\n\r\n    const refreshDialogs = () => {\r\n        if (userId) {\r\n            props.getMessages(userId);\r\n            activatingMessagesWindow(true)\r\n        } else {\r\n            activatingMessagesWindow(false)\r\n            dispatch(getDialogs())\r\n        }\r\n    }\r\n\r\n    //data\r\n    const dialogsArr = useSelector((state) => state.messagesPage.dialogsData)\r\n    const messagesArr = useSelector((state) => state.messagesPage.messagesData)\r\n    const currentInterlocutorId = useSelector((state) => state.messagesPage.currentInterlocutorId)\r\n    const isDialogsLoading = useSelector((state) => state.messagesPage.isDialogsLoading)\r\n    const isMessagesLoading = useSelector((state) => state.messagesPage.isLoading)\r\n\r\n    //methods\r\n    const addNewMessage = (values) => {\r\n        dispatch(sendMessage(currentInterlocutorId, values.newMessageBody))\r\n    }\r\n\r\n    const onDeleteMessage = (id) => {\r\n        dispatch(deleteMessage(id, currentInterlocutorId))\r\n    }\r\n\r\n    let dialogsElements = dialogsArr.map((dialog) => <DialogItem\r\n            activatingMessagesWindow={activatingMessagesWindow}\r\n            name={dialog.userName}\r\n            id={dialog.id}\r\n            key={dialog.id}\r\n            photo={dialog.photos.small}\r\n            newMessagesCount={dialog.newMessagesCount}\r\n            isNewMessage={dialog.hasNewMessages}\r\n        />\r\n    )\r\n\r\n    let messagesElements = messagesArr.map((m) => <Message\r\n            getMessages={props.getMessages}\r\n            deleteMessage={onDeleteMessage}\r\n            activatingMessagesWindow={activatingMessagesWindow}\r\n            message={m.body}\r\n            key={m.id}\r\n            id={m.id}\r\n            companionId={m.recipientId}\r\n            name={m.senderName}\r\n            viewed={m.viewed}\r\n        />\r\n    )\r\n\r\n    if (!props.isAuth) return <Redirect to={LOG_IN_PATH}/>;\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            {isMessagesWindow\r\n                ? <>\r\n                    {isMessagesLoading\r\n                        ? <Preloader/>\r\n                        : <div className={s.messages}>\r\n                            <NavLink to={DIALOGS_PATH}>\r\n                                <button>back</button>\r\n                            </NavLink>\r\n                            <div>{messagesElements}</div>\r\n                            <div>\r\n                                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </>\r\n                : <> {isDialogsLoading\r\n                    ? <Preloader/>\r\n                    : <div className={s.dialogsItems}>\r\n                        <div>{dialogsElements}</div>\r\n                    </div>\r\n                }\r\n                </>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;\r\n","import React from 'react'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to=\"/login\"/>;\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n","// import React from 'react';\r\nimport {sendMessageCreator} from \"../../redux/dialogs/dialogs-reducer\";\r\nimport {getMessages} from \"../../redux/dialogs/dialogs-thunks\"\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {withRouter} from \"react-router-dom\"\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {sendMessage: sendMessageCreator, getMessages}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(Dialogs);\r\n","import React from 'react';\r\nimport s from \"./ProfileDesc.module.css\";\r\nimport rightTick from '../../../../assets/images/right-tick.svg'\r\nimport falseTick from '../../../../assets/images/false-tick.svg'\r\n// import PropTypes from 'prop-types';\r\n\r\nconst ProfileDesc = (props) => {\r\n\r\n        const Contact = ({contactTitle, contactValue}) => <div className={s.contactTitle}>\r\n            <b>{contactTitle}:</b> {contactValue}</div>\r\n\r\n        let objContacts = props.profileData.contacts;\r\n        let arrContacts = Object.keys(objContacts)\r\n            .filter(key => objContacts[key])\r\n            .map(key => <Contact key={key} contactTitle={key} contactValue={objContacts[key]}/>)\r\n\r\n        return (\r\n            <div className={s.descriptionProfile}>\r\n                {props.isOwner &&\r\n                <div className={s.btnEdit}>\r\n                    <button onClick={() => props.changeData(true)}>edit info</button>\r\n                </div>\r\n                }\r\n                <span className={s.name}>\r\n                        {props.profileData.fullName}\r\n                </span>\r\n                <div>\r\n                    <b>About:</b>\r\n                    {props.profileData.aboutMe}\r\n                </div>\r\n                <div>\r\n                    <b>Looking For A JOB:</b>\r\n                    {props.profileData.lookingForAJob\r\n                        ? <img src={rightTick} alt={'right tick'} className={s.icon}/>\r\n                        : <img src={falseTick} alt={'false tick'} className={s.icon}/>\r\n                    }\r\n                </div>\r\n                {props.profileData.lookingForAJobDescription &&\r\n                <div>\r\n                    <b>My Skills:</b> {props.profileData.lookingForAJobDescription}\r\n                </div>}\r\n                {(arrContacts.length !== 0) ?\r\n                    <><b>Contacts:</b>\r\n                        {arrContacts}\r\n                    </> : null\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n;\r\n\r\n// AboutYou.propTypes = {\r\n//     profileData: PropTypes.objectOf(PropTypes.shape({\r\n//             name: PropTypes.string.isRequired,\r\n//             age: PropTypes.number.isRequired,\r\n//             filmsList: PropTypes.string.isRequired,\r\n//             musicList: PropTypes.string.isRequired\r\n//         }\r\n//         ).isRequired\r\n//     ).isRequired\r\n// };\r\n\r\nexport default ProfileDesc;\r\n","import React, {useRef} from 'react';\r\nimport s from \"./ProfilePhoto.module.css\";\r\nimport Avatar from \"../../../common/UserAvatar/Avatar\"\r\nimport Preloader from \"../../../common/Preloader/Preloader\"\r\nimport {useSelector} from \"react-redux\"\r\nimport {NavLink, useParams} from \"react-router-dom\"\r\nimport {DIALOGS_PATH} from \"../../../Main/Routes\"\r\n\r\nconst ProfilePhoto = ({addPhoto, isOwner}) => {\r\n\r\n    const {isPhotoLoading, photos, errorPhotoLoadingMessage} = useSelector((state) => state.profilePage.profile)\r\n\r\n    const {userId} = useParams()\r\n\r\n    const inputElement = useRef(null);\r\n\r\n    const changePhoto = () => {\r\n        inputElement.current && inputElement.current.click();\r\n    }\r\n\r\n    const onPhotoUpload = (e) => {\r\n        addPhoto(e.target.files[0])\r\n    }\r\n    return (\r\n        <div style={{marginRight: '10px'}}>\r\n            {isPhotoLoading\r\n                ? <div style={{\r\n                    width: '150px',\r\n                    height: '150px',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center'\r\n                }}>\r\n                    <Preloader/>\r\n                </div>\r\n                : <Avatar photo={photos.large} styled={s.photo}/>}\r\n            <div className={s.navLink}>\r\n                {isOwner\r\n                    ? <>\r\n                        <input type='file' style={{display: 'none'}}\r\n                               onChange={(e) => onPhotoUpload(e)}\r\n                               ref={inputElement}\r\n                        />\r\n                        <button style={{height: '30px'}} onClick={changePhoto}>Change Photo</button>\r\n                    </>\r\n                    : <>\r\n                        <NavLink to={`${DIALOGS_PATH}/${userId}`}>\r\n                            <button style={{height: '30px'}}>Send Message</button>\r\n                        </NavLink>\r\n                    </>\r\n                }\r\n            </div>\r\n            <span className={s.errorMessage}> {errorPhotoLoadingMessage || null} </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfilePhoto;\r\n","import React, {useState, useEffect} from 'react';\r\nimport s from '../ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    const [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => setEditMode(true)\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    let onStatusChange = (e) => setStatus(e.currentTarget.value);\r\n\r\n    return (\r\n        <div className={s.status}>\r\n            {!editMode &&\r\n            <div>\r\n                           <span onDoubleClick={activateEditMode}>\r\n                               {props.status || \"no-status\"}\r\n                           </span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input\r\n                    onChange={onStatusChange}\r\n                    autoFocus={true}\r\n                    onBlur={deactivateEditMode}\r\n                    value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;\r\n\r\n","import React from 'react';\r\nimport s from \"./ProfileDesc.module.css\";\r\nimport {createField, Input, Textarea} from \"../../../common/FormsControl/FormsControls\"\r\nimport {reduxForm} from \"redux-form\"\r\nimport styles from \"../../../common/FormsControl/FormsControls.module.css\"\r\nimport {useSelector} from \"react-redux\"\r\n\r\nconst ProfileDescForm = ({handleSubmit, error}) => {\r\n\r\n    const profile = useSelector((state) => state.profilePage.profile)\r\n\r\n    const objContacts = profile.contacts;\r\n    const arrContacts = Object.keys(objContacts)\r\n        .map(key => <div key={key} className={s.descElementWrap}>\r\n            <b className={s.descElementTitle}>{key}:</b> {createField(key, \"contacts.\" + key, [], Input)}\r\n        </div>)\r\n\r\n    return (\r\n        <form className={s.editForm} onSubmit={handleSubmit}>\r\n            <div className={s.editDescription}>\r\n                <div className={s.descElementWrap}>\r\n                    <b className={s.descElementTitle}>Full name:</b>\r\n                    {createField('full name', \"fullName\", [], Input)}\r\n                </div>\r\n                <div className={s.descElementWrap}>\r\n                    <b className={s.descElementTitle}>About:</b>\r\n                    {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n                </div>\r\n                <div className={s.descElementWrap}>\r\n                    <b className={s.descElementTitle}>Looking For A JOB</b>\r\n                    {createField(\"Looking for a job\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n                </div>\r\n                <div className={s.descElementWrap}>\r\n                    <b className={s.descElementTitle}>My Skills:</b>\r\n                    {createField(\"My Skills\", \"My Skills\", [], Textarea)}\r\n                </div>\r\n            </div>\r\n            {arrContacts}\r\n            <div>\r\n                {error && <div className={styles.formSummaryError}>\r\n                    {error}\r\n                </div>}\r\n            </div>\r\n            <div className={s.btnSubmit}>\r\n                <button style={{height: '30px'}}>submit</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ProfileDescFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDescForm)\r\n\r\nexport default ProfileDescFormReduxForm;\r\n","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileDesc from \"./ProfileDescription/ProfileDesc\";\r\nimport ProfilePhoto from \"./Avatar/ProfilePhoto\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatus/ProfileStatusWithHooks\"\r\nimport ProfileDescForm from \"./ProfileDescription/ProfileDescForm\"\r\nimport {useSelector} from \"react-redux\"\r\n\r\n\r\nconst ProfileInfo = ({errorMessage, isLoading, addPhoto, updateStatus, isOwner, saveProfile}) => {\r\n\r\n        const [isEditMode, setEditMode] = useState(false)\r\n\r\n        const profile = useSelector((state) => state.profilePage.profile)\r\n        const status = useSelector((state) => state.profilePage.status)\r\n\r\n        if (isLoading) {\r\n            return <Preloader/>\r\n        }\r\n\r\n        const onSubmit = (formData) => {\r\n            saveProfile(formData)\r\n                .then(\r\n                    () => {\r\n                        setEditMode(false)\r\n                    }\r\n                )\r\n        }\r\n\r\n        return (\r\n            <div className={s.profileInfo}>\r\n                {errorMessage ? <div style={{color: 'red'}}>{errorMessage}</div>\r\n                    : <>\r\n                        <ProfilePhoto addPhoto={addPhoto} isOwner={isOwner}/>\r\n                        <div>\r\n                            <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n                            {isEditMode\r\n                                ? <ProfileDescForm initialValues={profile}\r\n                                                   onSubmit={onSubmit}/>\r\n                                : <ProfileDesc profileData={profile}\r\n                                               changeData={setEditMode}\r\n                                               isOwner={isOwner}/>\r\n                            }\r\n                        </div>\r\n                    </>}\r\n            </div>\r\n\r\n        )\r\n    }\r\n;\r\n\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.myPost}>\r\n            <img src='https://d13ezvd6yrslxm.cloudfront.net/wp/wp-content/images/avatar-neytiri-sad.jpg' alt={'UserPhoto'}/>\r\n            <div>{props.message}</div>\r\n            <span className={s.like}>Like {props.likesCount}</span>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport s from './Posts.module.css';\r\nimport Post from \"./Post/Post\";\r\n// import PropTypes from 'prop-types';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControl/FormsControls\";\r\n\r\nconst Posts = React.memo((props) => {\r\n        const MyPosts = props.profilePage.postsData.map((obj) => <Post key={obj.id} message={obj.message}\r\n                                                                       likesCount={obj.likesCount}/>)\r\n        let onAddPost = (values) => {\r\n            props.addPost(values.newPostText);\r\n            // ADD-POST\r\n        };\r\n        return (\r\n            <div className={s.item}>\r\n                {!!props.isOwner &&\r\n                <>\r\n                    <PostsFormRedux onSubmit={onAddPost}/>\r\n\r\n                    <div className={s.posts}>\r\n                        {MyPosts}\r\n                    </div>\r\n                </>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n)\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst PostsForm = (props) => {\r\n    return (<form onSubmit={props.handleSubmit}>\r\n            <div className={s.input}>\r\n                <Field component={Textarea}\r\n                       name='newPostText'\r\n                       placeholder=\"What's up?\"\r\n                       validate={[required, maxLength10]}/>\r\n                <button>Запостить</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst PostsFormRedux = reduxForm({form: \"profileAddPostForm\"})(PostsForm);\r\n\r\n// Post.propTypes = {\r\n//     postsData: PropTypes.objectOf(PropTypes.shape({\r\n//             message: PropTypes.string.isRequired,\r\n//             likesCount: PropTypes.number.isRequired\r\n//         }.isRequired\r\n//         ).isRequired\r\n//     )\r\n// };\r\n\r\nexport default Posts;\r\n","// import React from 'react';\r\nimport {connect} from 'react-redux'\r\nimport {addPostActionCreator} from \"../../../redux/profile/profile-reducer\";\r\nimport Posts from \"./Posts\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profilePage: state.profilePage,\r\n        newPostText: state.profilePage.newPostText,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            // props.addPost();\r\n            dispatch(addPostActionCreator(newPostText));\r\n            // ADD-POST\r\n        },\r\n    }\r\n};\r\n\r\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts);\r\n\r\nexport default PostsContainer\r\n","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n// import PropTypes from 'prop-types';\r\nimport PostsContainer from \"./Posts/PostsContainer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <ProfileInfo errorMessage={props.errorMessage} isLoading={props.isLoading}\r\n                          updateStatus={props.updateStatus} addPhoto={props.addPhoto}\r\n                          isOwner={props.isOwner} saveProfile={props.saveProfile}/>\r\n            <PostsContainer isOwner={props.isOwner}/>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\n// Profile.PropTypes = {\r\n//     state: PropTypes.objectOf(PropTypes.shape({\r\n//         profilePage: PropTypes.objectOf.isRequired,\r\n//         postsData: PropTypes.objectOf.isRequired\r\n//     }).isRequired).isRequired\r\n// }\r\n\r\nexport default Profile;\r\n","// THUNK CREATOR:\r\nimport {\r\n    isPhotoLoading,\r\n    isProfileLoading,\r\n    setStatus,\r\n    setUserProfile,\r\n    uploadPhotoError,\r\n    uploadPhotoSuccess\r\n} from \"./profile-reducer\"\r\nimport {stopSubmit} from \"redux-form\"\r\nimport {profileAPI, usersAPI} from \"../../api/api\"\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    dispatch(isProfileLoading(true))\r\n    const response = await usersAPI.getProfile(userId)\r\n    dispatch(isProfileLoading(false))\r\n    dispatch(setUserProfile(response.data))\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    const response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data));\r\n}\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    const response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status))\r\n    }\r\n}\r\nexport const addPhoto = (myPhoto) => async (dispatch) => {\r\n    dispatch(isPhotoLoading(true))\r\n    const response = await profileAPI.uploadPhoto(myPhoto)\r\n    dispatch(isPhotoLoading(false))\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(uploadPhotoSuccess(response.data.data.photos))\r\n    } else {\r\n        dispatch(uploadPhotoError(response.data.messages[0]))\r\n    }\r\n}\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId\r\n    const response = await profileAPI.saveProfile(profile)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId))\r\n    } else if (response.data.resultCode === 1) {\r\n        dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0]}))\r\n        return Promise.reject(response.data.messages[0])\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from 'react-redux'\r\nimport {addPhoto, getStatus, getUserProfile, saveProfile, updateStatus} from \"../../redux/profile/profile-thunks\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\"\r\nimport {LOG_IN_PATH} from \"../Main/Routes\"\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile = () => {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(LOG_IN_PATH)\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    addPhoto = (myPhoto) => {\r\n        this.props.addPhoto(myPhoto)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     errorMessage={this.props.errorMessage}\r\n                     isLoading={this.props.isLoading}\r\n                     updateStatus={this.props.updateStatus}\r\n                     addPhoto={this.addPhoto}\r\n                     saveProfile={this.props.saveProfile}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    errorMessage: state.profilePage.errorMessage,\r\n    isLoading: state.profilePage.isLoading,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, addPhoto, saveProfile}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n","import React from 'react';\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControl/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login, logout} from \"../../redux/auth/auth-thunks\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport styles from '../../components/common/FormsControl/FormsControls.module.css'\r\n\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\r\n    return <form className={styles.loginWrapper} onSubmit={handleSubmit}>\r\n        {createField('Email', 'email', [required], Input)}\r\n        {createField('Password', 'password', [required], Input, {type: 'password'})}\r\n        <div className={styles.checkboxWrapper}>\r\n            {createField(null, 'rememberMe', null, Input, {type: 'checkbox'}, 'remember me')}\r\n        </div>\r\n        {captchaUrl && <div>\r\n            <img className={styles.captcha} src={captchaUrl} alt={\"captcha\"}/>\r\n            {createField('Symbols from image', 'captcha', [required], Input)}\r\n        </div>}\r\n        {error && <div className={styles.formSummaryError}>\r\n            {error}\r\n        </div>}\r\n        <button style={{height: '30px'}}>Login</button>\r\n    </form>\r\n};\r\n\r\nconst Login = ({login, isAuth, captchaUrl}) => {\r\n    const onSubmit = (formData) => {\r\n        login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n    };\r\n    if (isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    } else {\r\n        return <div className={styles.loginPage}>\r\n            <h1 className={styles.loginHeader}>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} captchaUrl={captchaUrl}/>\r\n        </div>\r\n    }\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\nconst mapStateToProps = (state) => ({isAuth: state.auth.isAuth, captchaUrl: state.auth.captchaUrl});\r\n\r\nexport default connect(mapStateToProps, {login, logout})(Login);\r\n","// THUNK CREATORS:\r\nimport {\r\n    followSuccess,\r\n    setCurrentPage,\r\n    setTotalUsersCount,\r\n    setUsers,\r\n    toggleIsFetching,\r\n    toggleIsFollowingProgress, unfollowSuccess\r\n} from \"./users-reducer\"\r\nimport {usersAPI} from \"../../api/api\"\r\n\r\nexport const requestUsers = (requestPage, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(requestPage));\r\n    const data = await usersAPI.getUsers(requestPage, pageSize)\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalUsersCount(data.totalCount));\r\n}\r\n\r\n// common function for follow/unfollow event.\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleIsFollowingProgress(true, userId));\r\n    const response = await apiMethod(userId)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleIsFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n    await followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess)\r\n}\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n    await followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\r\n}\r\n","import React, {useState} from 'react'\r\nimport s from \"./Pagination.module.css\";\r\nimport cn from \"classnames\";\r\n\r\nlet Pagination = ({currentPage, totalItemsCount, pageSize, onPageChanged, portionSize = 10}) => {\r\n\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    return <div className={s.paginator}>\r\n        {portionNumber > 1 &&\r\n        <button onClick={() => setPortionNumber(portionNumber - 1)}>Prev</button>}\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n            .map(p => {\r\n                    return <span\r\n                        key={p}\r\n                        className={cn({[s.selectedPage]: currentPage === p}, s.pageNumber)}\r\n                        onClick={() => {\r\n                            onPageChanged(p)\r\n                        }}>\r\n                    {p}\r\n            </span>\r\n                }\r\n            )\r\n        }\r\n        {portionCount > portionNumber &&\r\n        <button onClick={() => {\r\n            setPortionNumber(portionNumber + 1)\r\n        }}>Next</button>\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default Pagination;\r\n","import React from 'react'\r\nimport s from \"./Users.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Avatar from \"../common/UserAvatar/Avatar.jsx\"\r\nimport {DIALOGS_PATH, PROFILE_PATH} from \"../Main/Routes\"\r\n\r\nconst User = ({user, followingInProgress, unfollow, follow}) => {\r\n\r\n    const followClick = () => {\r\n        follow(user.id)\r\n    }\r\n    const unFollowClick = () => unfollow(user.id)\r\n\r\n    return <>\r\n              <span className={s.user}>\r\n                  <div className={s.photoContainer}>\r\n                  <NavLink to={`${PROFILE_PATH}/${user.id}`}>\r\n                                <Avatar photo={user.photos.small} styled={s.userPhoto}/>\r\n                  </NavLink>\r\n                      {user.followed\r\n                          ? <button\r\n                              disabled={followingInProgress.some(id => id === user.id)}\r\n                              onClick={unFollowClick}>Unfollow</button>\r\n                          : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                    onClick={followClick}>Follow</button>}\r\n                      <NavLink to={`${DIALOGS_PATH}/${user.id}`}>\r\n                              <button>Dialog</button>\r\n                      </NavLink>\r\n                </div>\r\n                   <span className={s.userDesc}>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                   </span>\r\n            </span>\r\n    </>\r\n}\r\n\r\nexport default User;\r\n","import React from 'react'\r\nimport Pagination from \"../common/Pagination/Pagination\"\r\nimport User from \"./User\"\r\nimport s from \"./Users.module.css\"\r\n\r\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\r\n    return <div className={s.usersContainer}>\r\n        <Pagination currentPage={currentPage}\r\n                    totalItemsCount={totalUsersCount}\r\n                    pageSize={pageSize}\r\n                    onPageChanged={onPageChanged}\r\n                    portionSize={20}\r\n        />\r\n        <div className={s.users}>\r\n            {users.map(u => <User\r\n                    user={u}\r\n                    key={u.id}\r\n                    follow={props.follow}\r\n                    unfollow={props.unfollow}\r\n                    followingInProgress={props.followingInProgress}\r\n                />\r\n            )\r\n            }\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default Users;\r\n","// import {createSelector} from \"reselect\";\r\n\r\nexport const getUsers = (state) => {\r\n    return state.usersPage.users\r\n};\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n};\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n};\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n};\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n};\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n};\r\nexport const getRedirectToDialogId = (state) => {\r\n    return state.usersPage.redirectToDialogId;\r\n};\r\n\r\n\r\n// reselector Example\r\n// export const getUsersSuperSelector = createSelector(getUsers, getIsFetching, (users, isFetching) => {\r\n//         if (!isFetching) {\r\n//             return users.filter(u => true)\r\n//         }\r\n//     }\r\n// );\r\n","import React from 'react';\r\nimport {\r\n    follow, unfollow, requestUsers\r\n} from \"../../redux/users/users-thunks\";\r\nimport {connect} from \"react-redux\";\r\nimport Users from './Users';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage, getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize, getRedirectToDialogId,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../redux/users/users-selectors\";\r\nimport {setCurrentPage, toggleIsFollowingProgress} from \"../../redux/users/users-reducer\"\r\nimport {startDialog} from \"../../redux/dialogs/dialogs-thunks\"\r\nimport {Redirect} from \"react-router-dom\"\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props\r\n        this.props.getUsers(pageNumber, pageSize);\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        if (this.props.userId) {\r\n            return <Redirect to={`/dialogs/${this.props.userId}`}/>\r\n        }\r\n\r\n        return <>\r\n            {this.props.isFetching\r\n                ? <Preloader/>\r\n                : null}\r\n            <Users onPageChanged={this.onPageChanged}\r\n                   totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n                   startDialog={this.props.startDialog}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n        userId: getRedirectToDialogId(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        follow, unfollow, setCurrentPage, toggleIsFollowingProgress, startDialog, getUsers: requestUsers\r\n    }))(UsersContainer)\r\n","import React from 'react'\r\nimport DialogsContainer from \"../Dialogs/DialogsContainer\"\r\nimport ProfileContainer from \"../Profile/ProfileContainer\"\r\nimport {withSuspense} from \"../../hoc/withSuspense\"\r\nimport LoginPage from \"../Login/Login\"\r\nimport {Redirect, Route, Switch} from \"react-router-dom\"\r\nimport UsersContainer from \"../Users/UsersContainer\"\r\nimport '../../App.css'\r\n\r\nexport const START_GH_PAGES_PATH = '/social-network-react';\r\nexport const LOG_IN_PATH = START_GH_PAGES_PATH + '/login';\r\nexport const DIALOGS_PATH = START_GH_PAGES_PATH + '/dialogs';\r\nexport const PROFILE_PATH = START_GH_PAGES_PATH + '/profile';\r\nexport const USERS_PATH = START_GH_PAGES_PATH + '/users';\r\n\r\nconst Routes = () => (\r\n    <div className=\"app-content\">\r\n        <Switch>\r\n            <Route exact path='/' render={() => <Redirect to={PROFILE_PATH}/>}/>\r\n            <Route path={DIALOGS_PATH + '/:userId?'} render={() => <DialogsContainer/>}/>\r\n            <Route path={PROFILE_PATH + '/:userId?'} render={() => <ProfileContainer/>}/>\r\n            <Route path={USERS_PATH} render={withSuspense(UsersContainer)}/>\r\n            <Route path={LOG_IN_PATH} render={() => <LoginPage/>}/>\r\n            <Route path='*'\r\n                   render={() => <div style={{width: '525px'}}> ERROR 404. Page Not\r\n                       Found</div>}/>\r\n        </Switch>\r\n    </div>\r\n)\r\n\r\nexport default Routes;\r\n","import React, {Suspense} from 'react'\r\nimport Preloader from \"../components/common/Preloader/Preloader\"\r\n\r\nexport const withSuspense = (Component) => (props) => <Suspense fallback={Preloader}><Component {...props}/></Suspense>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Navbar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {DIALOGS_PATH, PROFILE_PATH, USERS_PATH} from \"../Main/Routes\"\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to={PROFILE_PATH} activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={DIALOGS_PATH} activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to={USERS_PATH} activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport s from './Footer.module.css'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className={s.footer}>\r\n            {/*<img src='https://fuzati.com/wp-content/uploads/2016/12/JS-Logo.png' alt={'Social Network Logo'}/>*/}\r\n        </footer>\r\n    )\r\n}\r\nexport default Footer;\r\n","import React from 'react';\r\nimport '../../App.css';\r\n\r\nconst Sidebar = (props) => {\r\n    return (\r\n        <div className=\"sidebar\">\r\n            Friends:\r\n            {props.friendsName.map((m) => <div key={m.id}> {m.name} </div>)}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Sidebar;\r\n","// import React from 'react';\r\nimport {connect} from 'react-redux'\r\n// import s from './Profile.module.css';\r\nimport Sidebar from \"./Sidebar\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        friendsName: state.sidebar.friendsName\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nconst SidebarContainer = connect (mapStateToProps, mapDispatchToProps)(Sidebar);\r\n\r\n\r\nexport default SidebarContainer;\r\n","import React from 'react';\r\n\r\nconst Modal = ({children, ...props}) => {\r\n\r\n    if (!props.show) return null;\r\n\r\n    return (\r\n        <>\r\n            {props.blackout && <div style={{\r\n                position: \"fixed\",\r\n                top: '0px',\r\n                left: '0px',\r\n                width: '100vw',\r\n                height: '100vh',\r\n                backgroundColor: \"red\",\r\n                opacity: \"0.3\"\r\n            }}> </div>}\r\n            <div style={{\r\n                position: \"fixed\",\r\n                display: 'flex',\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                width: '200px',\r\n                height: '100px',\r\n                borderRadius: '10px',\r\n                backgroundColor: \"white\",\r\n                top: `${props.top}px`\r\n            }}>\r\n                {children}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport Modals from \"./ModalSimpleMessage\";\r\nimport {useDispatch} from \"react-redux\"\r\nimport {setError} from \"../../../redux/main/app-reducer\"\r\n\r\nconst ModalContainer = ({errorMessage}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onSetError = () => {\r\n        dispatch(setError(''))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modals top={200} show={errorMessage} blackout={true}>\r\n                <div style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\"\r\n                }}>\r\n                    <div style={{margin: '10px'}}>\r\n                        {errorMessage}\r\n                    </div>\r\n                    <div style={{position: 'absolute', right: '10px', top: '10px'}}>\r\n                        <button style={{height: '22px', padding: '2px'}} onClick={() => onSetError()}>X</button>\r\n                    </div>\r\n                </div>\r\n            </Modals>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ModalContainer;\r\n","import React from 'react';\r\nimport ModalsContainer from \"./ModalsContainer\";\r\nimport {useSelector} from \"react-redux\"\r\n\r\nconst ModalsPage = () => {\r\n\r\n    const errorMessage = useSelector((state) => state.app.errorMessage)\r\n\r\n    return (\r\n        <>\r\n            <ModalsContainer errorMessage={errorMessage}/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ModalsPage;\r\n","import React, {Component, Suspense} from 'react';\nimport './App.css';\nimport Header from \"./components/Header/HeaderCountainer\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Footer from \"./components/Footer/Footer\";\nimport {BrowserRouter, Redirect, Route, Switch, withRouter} from \"react-router-dom\";\nimport SidebarContainer from \"./components/Sidebar/SidebarContainer\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/main/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport store from \"./redux/redux-store\"\nimport ModalsPage from \"./components/common/ErrorModal/ModalsPage\"\nimport Routes from \"./components/Main/Routes\"\n\nclass App extends Component {\n\n    catchAllUnhandledErrors = (reason, promise) => {\n        // alert('Some error')\n        console.error(promise)\n    }\n\n    componentDidMount() {\n        this.props.initializeApp();\n        window.addEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\n    }\n\n    render() {\n\n        if (!this.props.initialized) {\n            return <Preloader/>\n        } else {\n            return (\n                <div className='app-wrapper'>\n                    <Header/>\n                    <ModalsPage/>\n                    <div className='app-wrapper-content'>\n                        <div className='app-navbar'>\n                            <Navbar/>\n                            <SidebarContainer/>\n                        </div>\n                        <Routes/>\n                    </div>\n                    <Footer/>\n                </div>\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n});\n\nconst AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n\nconst MainApp = (props) => {\n    return (\n        <>\n            <BrowserRouter basename={process.env.PUBLIC_URL}>\n                <Provider store={store}>\n                    <AppContainer/>\n                </Provider>\n            </BrowserRouter>\n        </>\n    )\n}\n\nexport default MainApp\n","import * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport './index.css';\nimport ReactDOM from \"react-dom\";\nimport {isError, isError401} from \"./redux/errors-handler\";\nimport MainApp from \"./App\"\n\nReactDOM.render(\n    <MainApp/>, document.getElementById('root'));\n\nisError401();\nisError();\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import store from \"./redux-store\"\r\nimport {setAuthUserData} from \"./auth/auth-reducer\"\r\nimport {setErrorHandler, setHandler401} from \"../api/api\"\r\nimport {setError} from \"./main/app-reducer\"\r\n\r\nexport const isError401 = () => {\r\n    const callback401 = () => {\r\n        return store.dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n    setHandler401(callback401)\r\n}\r\n\r\nexport const isError = () => {\r\n    const errorCallback = (errorMessage) => {\r\n        return store.dispatch(setError(errorMessage))\r\n    }\r\n    setErrorHandler(errorCallback)\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1Aa7J\",\"messages\":\"Dialogs_messages__2U-Z6\",\"message\":\"Dialogs_message__3pFln\",\"unViewed\":\"Dialogs_unViewed__YmnCL\",\"autorName\":\"Dialogs_autorName__2AHE6\",\"textMessage\":\"Dialogs_textMessage__LYvbS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersContainer\":\"Users_usersContainer__3qP4s\",\"userPhoto\":\"Users_userPhoto__2GNy5\",\"users\":\"Users_users__1BKYL\",\"user\":\"Users_user__2Cijy\",\"photoContainer\":\"Users_photoContainer__26Y4i\",\"userDesc\":\"Users_userDesc__n-qTG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__ZDLMb\",\"item\":\"Navbar_item__3-lr_\",\"activeLink\":\"Navbar_activeLink__1hida\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogWrapper\":\"DialogItem_dialogWrapper__3xPg2\",\"dialog\":\"DialogItem_dialog__U2jvs\",\"avatarWrapper\":\"DialogItem_avatarWrapper__1tMlG\",\"avatar\":\"DialogItem_avatar__RtwHj\",\"nameWrapper\":\"DialogItem_nameWrapper__3TtMO\",\"newMessagesCountWrapper\":\"DialogItem_newMessagesCountWrapper__2H0v8\",\"newMessagesCount\":\"DialogItem_newMessagesCount__3E7uU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"SendForm_formWrapper__2TzLW\",\"textareaWrapper\":\"SendForm_textareaWrapper__DYZIF\",\"textarea\":\"SendForm_textarea__1lP8e\",\"buttonWrapper\":\"SendForm_buttonWrapper__2SmNt\",\"button\":\"SendForm_button__9W-Vn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__80lrY\",\"status\":\"ProfileInfo_status__3ne3X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photo\":\"ProfilePhoto_photo__9K17E\",\"errorMessage\":\"ProfilePhoto_errorMessage__obHc5\",\"navLink\":\"ProfilePhoto_navLink__V3G6A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Posts_item__2C1Gh\",\"posts\":\"Posts_posts__3FwCg\",\"input\":\"Posts_input__32s1e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Pagination_paginator__s0UZP\",\"pageNumber\":\"Pagination_pageNumber__3gVIf\",\"selectedPage\":\"Pagination_selectedPage__1fzD1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3DP8N\",\"loginBlock\":\"Header_loginBlock__3qsUX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPost\":\"Post_myPost__1xAV2\",\"like\":\"Post_like__drfKI\"};"],"sourceRoot":""}